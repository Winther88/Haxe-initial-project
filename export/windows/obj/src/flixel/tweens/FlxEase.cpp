// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_38_linear,"flixel.tweens.FlxEase","linear",0xeb7e31a7,"flixel.tweens.FlxEase.linear","flixel/tweens/FlxEase.hx",38,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_43_quadIn,"flixel.tweens.FlxEase","quadIn",0xcb7d584e,"flixel.tweens.FlxEase.quadIn","flixel/tweens/FlxEase.hx",43,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_48_quadOut,"flixel.tweens.FlxEase","quadOut",0x42348005,"flixel.tweens.FlxEase.quadOut","flixel/tweens/FlxEase.hx",48,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_53_quadInOut,"flixel.tweens.FlxEase","quadInOut",0x1f34a4e0,"flixel.tweens.FlxEase.quadInOut","flixel/tweens/FlxEase.hx",53,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_58_cubeIn,"flixel.tweens.FlxEase","cubeIn",0x332843fc,"flixel.tweens.FlxEase.cubeIn","flixel/tweens/FlxEase.hx",58,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_63_cubeOut,"flixel.tweens.FlxEase","cubeOut",0x9017cc97,"flixel.tweens.FlxEase.cubeOut","flixel/tweens/FlxEase.hx",63,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_68_cubeInOut,"flixel.tweens.FlxEase","cubeInOut",0x25f1b9f2,"flixel.tweens.FlxEase.cubeInOut","flixel/tweens/FlxEase.hx",68,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_73_quartIn,"flixel.tweens.FlxEase","quartIn",0x4b9169c2,"flixel.tweens.FlxEase.quartIn","flixel/tweens/FlxEase.hx",73,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_78_quartOut,"flixel.tweens.FlxEase","quartOut",0xd3afb411,"flixel.tweens.FlxEase.quartOut","flixel/tweens/FlxEase.hx",78,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_83_quartInOut,"flixel.tweens.FlxEase","quartInOut",0x6cedf3ec,"flixel.tweens.FlxEase.quartInOut","flixel/tweens/FlxEase.hx",83,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_88_quintIn,"flixel.tweens.FlxEase","quintIn",0xe421334e,"flixel.tweens.FlxEase.quintIn","flixel/tweens/FlxEase.hx",88,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_93_quintOut,"flixel.tweens.FlxEase","quintOut",0xb8f04505,"flixel.tweens.FlxEase.quintOut","flixel/tweens/FlxEase.hx",93,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_98_quintInOut,"flixel.tweens.FlxEase","quintInOut",0x902ba9e0,"flixel.tweens.FlxEase.quintInOut","flixel/tweens/FlxEase.hx",98,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_104_smoothStepIn,"flixel.tweens.FlxEase","smoothStepIn",0x03c18261,"flixel.tweens.FlxEase.smoothStepIn","flixel/tweens/FlxEase.hx",104,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_110_smoothStepOut,"flixel.tweens.FlxEase","smoothStepOut",0x45952692,"flixel.tweens.FlxEase.smoothStepOut","flixel/tweens/FlxEase.hx",110,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_116_smoothStepInOut,"flixel.tweens.FlxEase","smoothStepInOut",0x38f5c8ad,"flixel.tweens.FlxEase.smoothStepInOut","flixel/tweens/FlxEase.hx",116,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_122_smootherStepIn,"flixel.tweens.FlxEase","smootherStepIn",0x7902468e,"flixel.tweens.FlxEase.smootherStepIn","flixel/tweens/FlxEase.hx",122,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_128_smootherStepOut,"flixel.tweens.FlxEase","smootherStepOut",0x690009c5,"flixel.tweens.FlxEase.smootherStepOut","flixel/tweens/FlxEase.hx",128,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_134_smootherStepInOut,"flixel.tweens.FlxEase","smootherStepInOut",0x37461ea0,"flixel.tweens.FlxEase.smootherStepInOut","flixel/tweens/FlxEase.hx",134,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_139_sineIn,"flixel.tweens.FlxEase","sineIn",0xb7fda354,"flixel.tweens.FlxEase.sineIn","flixel/tweens/FlxEase.hx",139,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_144_sineOut,"flixel.tweens.FlxEase","sineOut",0x45f5da3f,"flixel.tweens.FlxEase.sineOut","flixel/tweens/FlxEase.hx",144,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_149_sineInOut,"flixel.tweens.FlxEase","sineInOut",0x99ac819a,"flixel.tweens.FlxEase.sineInOut","flixel/tweens/FlxEase.hx",149,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_154_bounceIn,"flixel.tweens.FlxEase","bounceIn",0x26970bcf,"flixel.tweens.FlxEase.bounceIn","flixel/tweens/FlxEase.hx",154,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_158_bounceOut,"flixel.tweens.FlxEase","bounceOut",0x9d97dd64,"flixel.tweens.FlxEase.bounceOut","flixel/tweens/FlxEase.hx",158,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_170_bounceInOut,"flixel.tweens.FlxEase","bounceInOut",0xa03157ff,"flixel.tweens.FlxEase.bounceInOut","flixel/tweens/FlxEase.hx",170,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_177_circIn,"flixel.tweens.FlxEase","circIn",0x54eb335e,"flixel.tweens.FlxEase.circIn","flixel/tweens/FlxEase.hx",177,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_182_circOut,"flixel.tweens.FlxEase","circOut",0xf8e652f5,"flixel.tweens.FlxEase.circOut","flixel/tweens/FlxEase.hx",182,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_187_circInOut,"flixel.tweens.FlxEase","circInOut",0x443513d0,"flixel.tweens.FlxEase.circInOut","flixel/tweens/FlxEase.hx",187,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_192_expoIn,"flixel.tweens.FlxEase","expoIn",0xc35b4d79,"flixel.tweens.FlxEase.expoIn","flixel/tweens/FlxEase.hx",192,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_197_expoOut,"flixel.tweens.FlxEase","expoOut",0x2c8d107a,"flixel.tweens.FlxEase.expoOut","flixel/tweens/FlxEase.hx",197,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_202_expoInOut,"flixel.tweens.FlxEase","expoInOut",0xbd29fc95,"flixel.tweens.FlxEase.expoInOut","flixel/tweens/FlxEase.hx",202,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_207_backIn,"flixel.tweens.FlxEase","backIn",0x497711ae,"flixel.tweens.FlxEase.backIn","flixel/tweens/FlxEase.hx",207,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_212_backOut,"flixel.tweens.FlxEase","backOut",0xfebcfaa5,"flixel.tweens.FlxEase.backOut","flixel/tweens/FlxEase.hx",212,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_216_backInOut,"flixel.tweens.FlxEase","backInOut",0x6ac90780,"flixel.tweens.FlxEase.backInOut","flixel/tweens/FlxEase.hx",216,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_226_elasticIn,"flixel.tweens.FlxEase","elasticIn",0xf7740698,"flixel.tweens.FlxEase.elasticIn","flixel/tweens/FlxEase.hx",226,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_232_elasticOut,"flixel.tweens.FlxEase","elasticOut",0x8e16527b,"flixel.tweens.FlxEase.elasticOut","flixel/tweens/FlxEase.hx",232,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_238_elasticInOut,"flixel.tweens.FlxEase","elasticInOut",0x850880d6,"flixel.tweens.FlxEase.elasticInOut","flixel/tweens/FlxEase.hx",238,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_23_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",23,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_25_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",25,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_26_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",26,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_27_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",27,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_28_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",28,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_29_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",29,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_30_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",30,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_31_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",31,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_32_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",32,0x71810bf2)
HX_LOCAL_STACK_FRAME(_hx_pos_a9a0b53a43037f15_33_boot,"flixel.tweens.FlxEase","boot",0xecae8f74,"flixel.tweens.FlxEase.boot","flixel/tweens/FlxEase.hx",33,0x71810bf2)
namespace flixel{
namespace tweens{

void FlxEase_obj::__construct() { }

Dynamic FlxEase_obj::__CreateEmpty() { return new FlxEase_obj; }

void *FlxEase_obj::_hx_vtable = 0;

Dynamic FlxEase_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxEase_obj > _hx_result = new FlxEase_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxEase_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1e146db8;
}

Float FlxEase_obj::PI2;

Float FlxEase_obj::EL;

Float FlxEase_obj::B1;

Float FlxEase_obj::B2;

Float FlxEase_obj::B3;

Float FlxEase_obj::B4;

Float FlxEase_obj::B5;

Float FlxEase_obj::B6;

Float FlxEase_obj::ELASTIC_AMPLITUDE;

Float FlxEase_obj::ELASTIC_PERIOD;

Float FlxEase_obj::linear(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_38_linear)
HXDLIN(  38)		return t;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,linear,return )

Float FlxEase_obj::quadIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_43_quadIn)
HXDLIN(  43)		return (t * t);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quadIn,return )

Float FlxEase_obj::quadOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_48_quadOut)
HXDLIN(  48)		return (-(t) * (t - ( (Float)(2) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quadOut,return )

Float FlxEase_obj::quadInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_53_quadInOut)
HXDLIN(  53)		if ((t <= ((Float).5))) {
HXDLIN(  53)			return ((t * t) * ( (Float)(2) ));
            		}
            		else {
HXDLIN(  53)			t = (t - ( (Float)(1) ));
HXDLIN(  53)			return (( (Float)(1) ) - ((t * t) * ( (Float)(2) )));
            		}
HXDLIN(  53)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quadInOut,return )

Float FlxEase_obj::cubeIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_58_cubeIn)
HXDLIN(  58)		return ((t * t) * t);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,cubeIn,return )

Float FlxEase_obj::cubeOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_63_cubeOut)
HXDLIN(  63)		t = (t - ( (Float)(1) ));
HXDLIN(  63)		return (1 + ((t * t) * t));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,cubeOut,return )

Float FlxEase_obj::cubeInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_68_cubeInOut)
HXDLIN(  68)		if ((t <= ((Float).5))) {
HXDLIN(  68)			return (((t * t) * t) * ( (Float)(4) ));
            		}
            		else {
HXDLIN(  68)			t = (t - ( (Float)(1) ));
HXDLIN(  68)			return (1 + (((t * t) * t) * ( (Float)(4) )));
            		}
HXDLIN(  68)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,cubeInOut,return )

Float FlxEase_obj::quartIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_73_quartIn)
HXDLIN(  73)		return (((t * t) * t) * t);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quartIn,return )

Float FlxEase_obj::quartOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_78_quartOut)
HXDLIN(  78)		t = (t - ( (Float)(1) ));
HXDLIN(  78)		return (( (Float)(1) ) - (((t * t) * t) * t));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quartOut,return )

Float FlxEase_obj::quartInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_83_quartInOut)
HXDLIN(  83)		if ((t <= ((Float).5))) {
HXDLIN(  83)			return ((((t * t) * t) * t) * ( (Float)(8) ));
            		}
            		else {
HXDLIN(  83)			t = ((t * ( (Float)(2) )) - ( (Float)(2) ));
HXDLIN(  83)			return (((( (Float)(1) ) - (((t * t) * t) * t)) / ( (Float)(2) )) + ((Float).5));
            		}
HXDLIN(  83)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quartInOut,return )

Float FlxEase_obj::quintIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_88_quintIn)
HXDLIN(  88)		return ((((t * t) * t) * t) * t);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quintIn,return )

Float FlxEase_obj::quintOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_93_quintOut)
HXDLIN(  93)		t = (t - ( (Float)(1) ));
HXDLIN(  93)		return (((((t * t) * t) * t) * t) + 1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quintOut,return )

Float FlxEase_obj::quintInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_98_quintInOut)
HXDLIN(  98)		t = (t * ( (Float)(2) ));
HXDLIN(  98)		if ((t < 1)) {
HXDLIN(  98)			return (((((t * t) * t) * t) * t) / ( (Float)(2) ));
            		}
            		else {
HXDLIN(  98)			t = (t - ( (Float)(2) ));
HXDLIN(  98)			return ((((((t * t) * t) * t) * t) + 2) / ( (Float)(2) ));
            		}
HXDLIN(  98)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,quintInOut,return )

Float FlxEase_obj::smoothStepIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_104_smoothStepIn)
HXDLIN( 104)		Float t1 = (t / ( (Float)(2) ));
HXDLIN( 104)		return (( (Float)(2) ) * ((t1 * t1) * ((t1 * ( (Float)(-2) )) + 3)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,smoothStepIn,return )

Float FlxEase_obj::smoothStepOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_110_smoothStepOut)
HXDLIN( 110)		Float t1 = ((t / ( (Float)(2) )) + ((Float)0.5));
HXDLIN( 110)		return ((( (Float)(2) ) * ((t1 * t1) * ((t1 * ( (Float)(-2) )) + 3))) - ( (Float)(1) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,smoothStepOut,return )

Float FlxEase_obj::smoothStepInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_116_smoothStepInOut)
HXDLIN( 116)		return ((t * t) * ((t * ( (Float)(-2) )) + 3));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,smoothStepInOut,return )

Float FlxEase_obj::smootherStepIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_122_smootherStepIn)
HXDLIN( 122)		Float t1 = (t / ( (Float)(2) ));
HXDLIN( 122)		return (( (Float)(2) ) * (((t1 * t1) * t1) * ((t1 * ((t1 * ( (Float)(6) )) - ( (Float)(15) ))) + 10)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,smootherStepIn,return )

Float FlxEase_obj::smootherStepOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_128_smootherStepOut)
HXDLIN( 128)		Float t1 = ((t / ( (Float)(2) )) + ((Float)0.5));
HXDLIN( 128)		return ((( (Float)(2) ) * (((t1 * t1) * t1) * ((t1 * ((t1 * ( (Float)(6) )) - ( (Float)(15) ))) + 10))) - ( (Float)(1) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,smootherStepOut,return )

Float FlxEase_obj::smootherStepInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_134_smootherStepInOut)
HXDLIN( 134)		return (((t * t) * t) * ((t * ((t * ( (Float)(6) )) - ( (Float)(15) ))) + 10));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,smootherStepInOut,return )

Float FlxEase_obj::sineIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_139_sineIn)
HXDLIN( 139)		return (-(::Math_obj::cos((::flixel::tweens::FlxEase_obj::PI2 * t))) + 1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,sineIn,return )

Float FlxEase_obj::sineOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_144_sineOut)
HXDLIN( 144)		return ::Math_obj::sin((::flixel::tweens::FlxEase_obj::PI2 * t));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,sineOut,return )

Float FlxEase_obj::sineInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_149_sineInOut)
HXDLIN( 149)		return ((-(::Math_obj::cos((::Math_obj::PI * t))) / ( (Float)(2) )) + ((Float).5));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,sineInOut,return )

Float FlxEase_obj::bounceIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_154_bounceIn)
HXDLIN( 154)		return (( (Float)(1) ) - ::flixel::tweens::FlxEase_obj::bounceOut((( (Float)(1) ) - t)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,bounceIn,return )

Float FlxEase_obj::bounceOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_158_bounceOut)
HXLINE( 159)		if ((t < ::flixel::tweens::FlxEase_obj::B1)) {
HXLINE( 160)			return ((((Float)7.5625) * t) * t);
            		}
HXLINE( 161)		if ((t < ::flixel::tweens::FlxEase_obj::B2)) {
HXLINE( 162)			return (((((Float)7.5625) * (t - ::flixel::tweens::FlxEase_obj::B3)) * (t - ::flixel::tweens::FlxEase_obj::B3)) + ((Float).75));
            		}
HXLINE( 163)		if ((t < ::flixel::tweens::FlxEase_obj::B4)) {
HXLINE( 164)			return (((((Float)7.5625) * (t - ::flixel::tweens::FlxEase_obj::B5)) * (t - ::flixel::tweens::FlxEase_obj::B5)) + ((Float).9375));
            		}
HXLINE( 165)		return (((((Float)7.5625) * (t - ::flixel::tweens::FlxEase_obj::B6)) * (t - ::flixel::tweens::FlxEase_obj::B6)) + ((Float).984375));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,bounceOut,return )

Float FlxEase_obj::bounceInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_170_bounceInOut)
HXDLIN( 170)		if ((t < ((Float)0.5))) {
HXLINE( 171)			return ((( (Float)(1) ) - ::flixel::tweens::FlxEase_obj::bounceOut((( (Float)(1) ) - (( (Float)(2) ) * t)))) / ( (Float)(2) ));
            		}
            		else {
HXLINE( 172)			return ((1 + ::flixel::tweens::FlxEase_obj::bounceOut(((( (Float)(2) ) * t) - ( (Float)(1) )))) / ( (Float)(2) ));
            		}
HXLINE( 170)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,bounceInOut,return )

Float FlxEase_obj::circIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_177_circIn)
HXDLIN( 177)		return -((::Math_obj::sqrt((( (Float)(1) ) - (t * t))) - ( (Float)(1) )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,circIn,return )

Float FlxEase_obj::circOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_182_circOut)
HXDLIN( 182)		return ::Math_obj::sqrt((( (Float)(1) ) - ((t - ( (Float)(1) )) * (t - ( (Float)(1) )))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,circOut,return )

Float FlxEase_obj::circInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_187_circInOut)
HXDLIN( 187)		if ((t <= ((Float).5))) {
HXDLIN( 187)			return ((::Math_obj::sqrt((( (Float)(1) ) - ((t * t) * ( (Float)(4) )))) - ( (Float)(1) )) / ( (Float)(-2) ));
            		}
            		else {
HXDLIN( 187)			return ((::Math_obj::sqrt((( (Float)(1) ) - (((t * ( (Float)(2) )) - ( (Float)(2) )) * ((t * ( (Float)(2) )) - ( (Float)(2) ))))) + 1) / ( (Float)(2) ));
            		}
HXDLIN( 187)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,circInOut,return )

Float FlxEase_obj::expoIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_192_expoIn)
HXDLIN( 192)		return ::Math_obj::pow(( (Float)(2) ),(( (Float)(10) ) * (t - ( (Float)(1) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,expoIn,return )

Float FlxEase_obj::expoOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_197_expoOut)
HXDLIN( 197)		return (-(::Math_obj::pow(( (Float)(2) ),(( (Float)(-10) ) * t))) + 1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,expoOut,return )

Float FlxEase_obj::expoInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_202_expoInOut)
HXDLIN( 202)		if ((t < ((Float).5))) {
HXDLIN( 202)			return (::Math_obj::pow(( (Float)(2) ),(( (Float)(10) ) * ((t * ( (Float)(2) )) - ( (Float)(1) )))) / ( (Float)(2) ));
            		}
            		else {
HXDLIN( 202)			return ((-(::Math_obj::pow(( (Float)(2) ),(( (Float)(-10) ) * ((t * ( (Float)(2) )) - ( (Float)(1) ))))) + 2) / ( (Float)(2) ));
            		}
HXDLIN( 202)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,expoInOut,return )

Float FlxEase_obj::backIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_207_backIn)
HXDLIN( 207)		return ((t * t) * ((((Float)2.70158) * t) - ((Float)1.70158)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,backIn,return )

Float FlxEase_obj::backOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_212_backOut)
HXDLIN( 212)		t = (t - ( (Float)(1) ));
HXDLIN( 212)		return (( (Float)(1) ) - ((t * t) * ((((Float)-2.70158) * t) - ((Float)1.70158))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,backOut,return )

Float FlxEase_obj::backInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_216_backInOut)
HXLINE( 217)		t = (t * ( (Float)(2) ));
HXLINE( 218)		if ((t < 1)) {
HXLINE( 219)			return (((t * t) * ((((Float)2.70158) * t) - ((Float)1.70158))) / ( (Float)(2) ));
            		}
HXLINE( 220)		t = (t - ( (Float)(1) ));
HXLINE( 221)		t = (t - ( (Float)(1) ));
HXDLIN( 221)		return (((( (Float)(1) ) - ((t * t) * ((((Float)-2.70158) * t) - ((Float)1.70158)))) / ( (Float)(2) )) + ((Float).5));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,backInOut,return )

Float FlxEase_obj::elasticIn(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_226_elasticIn)
HXLINE( 227)		t = (t - ( (Float)(1) ));
HXLINE( 226)		return -(((::flixel::tweens::FlxEase_obj::ELASTIC_AMPLITUDE * ::Math_obj::pow(( (Float)(2) ),(( (Float)(10) ) * t))) * ::Math_obj::sin((((t - ((::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD / (( (Float)(2) ) * ::Math_obj::PI)) * ::Math_obj::asin((( (Float)(1) ) / ::flixel::tweens::FlxEase_obj::ELASTIC_AMPLITUDE)))) * (( (Float)(2) ) * ::Math_obj::PI)) / ::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,elasticIn,return )

Float FlxEase_obj::elasticOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_232_elasticOut)
HXDLIN( 232)		return (((::flixel::tweens::FlxEase_obj::ELASTIC_AMPLITUDE * ::Math_obj::pow(( (Float)(2) ),(( (Float)(-10) ) * t))) * ::Math_obj::sin((((t - ((::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD / (( (Float)(2) ) * ::Math_obj::PI)) * ::Math_obj::asin((( (Float)(1) ) / ::flixel::tweens::FlxEase_obj::ELASTIC_AMPLITUDE)))) * (( (Float)(2) ) * ::Math_obj::PI)) / ::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD))) + 1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,elasticOut,return )

Float FlxEase_obj::elasticInOut(Float t){
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_238_elasticInOut)
HXLINE( 239)		if ((t < ((Float)0.5))) {
HXLINE( 241)			t = (t - ((Float)0.5));
HXDLIN( 241)			return (((Float)-0.5) * (::Math_obj::pow(( (Float)(2) ),(( (Float)(10) ) * t)) * ::Math_obj::sin((((t - (::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD / ( (Float)(4) ))) * (( (Float)(2) ) * ::Math_obj::PI)) / ::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD))));
            		}
HXLINE( 243)		t = (t - ((Float)0.5));
HXDLIN( 243)		return (((::Math_obj::pow(( (Float)(2) ),(( (Float)(-10) ) * t)) * ::Math_obj::sin((((t - (::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD / ( (Float)(4) ))) * (( (Float)(2) ) * ::Math_obj::PI)) / ::flixel::tweens::FlxEase_obj::ELASTIC_PERIOD))) * ((Float)0.5)) + 1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxEase_obj,elasticInOut,return )


FlxEase_obj::FlxEase_obj()
{
}

bool FlxEase_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"EL") ) { outValue = ( EL ); return true; }
		if (HX_FIELD_EQ(inName,"B1") ) { outValue = ( B1 ); return true; }
		if (HX_FIELD_EQ(inName,"B2") ) { outValue = ( B2 ); return true; }
		if (HX_FIELD_EQ(inName,"B3") ) { outValue = ( B3 ); return true; }
		if (HX_FIELD_EQ(inName,"B4") ) { outValue = ( B4 ); return true; }
		if (HX_FIELD_EQ(inName,"B5") ) { outValue = ( B5 ); return true; }
		if (HX_FIELD_EQ(inName,"B6") ) { outValue = ( B6 ); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"PI2") ) { outValue = ( PI2 ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"linear") ) { outValue = linear_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"quadIn") ) { outValue = quadIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cubeIn") ) { outValue = cubeIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sineIn") ) { outValue = sineIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"circIn") ) { outValue = circIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"expoIn") ) { outValue = expoIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"backIn") ) { outValue = backIn_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"quadOut") ) { outValue = quadOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cubeOut") ) { outValue = cubeOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"quartIn") ) { outValue = quartIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"quintIn") ) { outValue = quintIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sineOut") ) { outValue = sineOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"circOut") ) { outValue = circOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"expoOut") ) { outValue = expoOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"backOut") ) { outValue = backOut_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"quartOut") ) { outValue = quartOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"quintOut") ) { outValue = quintOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bounceIn") ) { outValue = bounceIn_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"quadInOut") ) { outValue = quadInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cubeInOut") ) { outValue = cubeInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sineInOut") ) { outValue = sineInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bounceOut") ) { outValue = bounceOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"circInOut") ) { outValue = circInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"expoInOut") ) { outValue = expoInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"backInOut") ) { outValue = backInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"elasticIn") ) { outValue = elasticIn_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"quartInOut") ) { outValue = quartInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"quintInOut") ) { outValue = quintInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"elasticOut") ) { outValue = elasticOut_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"bounceInOut") ) { outValue = bounceInOut_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"smoothStepIn") ) { outValue = smoothStepIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"elasticInOut") ) { outValue = elasticInOut_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"smoothStepOut") ) { outValue = smoothStepOut_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ELASTIC_PERIOD") ) { outValue = ( ELASTIC_PERIOD ); return true; }
		if (HX_FIELD_EQ(inName,"smootherStepIn") ) { outValue = smootherStepIn_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"smoothStepInOut") ) { outValue = smoothStepInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"smootherStepOut") ) { outValue = smootherStepOut_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"ELASTIC_AMPLITUDE") ) { outValue = ( ELASTIC_AMPLITUDE ); return true; }
		if (HX_FIELD_EQ(inName,"smootherStepInOut") ) { outValue = smootherStepInOut_dyn(); return true; }
	}
	return false;
}

bool FlxEase_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"EL") ) { EL=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"B1") ) { B1=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"B2") ) { B2=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"B3") ) { B3=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"B4") ) { B4=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"B5") ) { B5=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"B6") ) { B6=ioValue.Cast< Float >(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"PI2") ) { PI2=ioValue.Cast< Float >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"ELASTIC_PERIOD") ) { ELASTIC_PERIOD=ioValue.Cast< Float >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"ELASTIC_AMPLITUDE") ) { ELASTIC_AMPLITUDE=ioValue.Cast< Float >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxEase_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo FlxEase_obj_sStaticStorageInfo[] = {
	{::hx::fsFloat,(void *) &FlxEase_obj::PI2,HX_("PI2",19,f4,3c,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::EL,HX_("EL",67,3c,00,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::B1,HX_("B1",af,39,00,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::B2,HX_("B2",b0,39,00,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::B3,HX_("B3",b1,39,00,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::B4,HX_("B4",b2,39,00,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::B5,HX_("B5",b3,39,00,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::B6,HX_("B6",b4,39,00,00)},
	{::hx::fsFloat,(void *) &FlxEase_obj::ELASTIC_AMPLITUDE,HX_("ELASTIC_AMPLITUDE",d9,ea,04,7e)},
	{::hx::fsFloat,(void *) &FlxEase_obj::ELASTIC_PERIOD,HX_("ELASTIC_PERIOD",8b,99,23,3b)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void FlxEase_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxEase_obj::PI2,"PI2");
	HX_MARK_MEMBER_NAME(FlxEase_obj::EL,"EL");
	HX_MARK_MEMBER_NAME(FlxEase_obj::B1,"B1");
	HX_MARK_MEMBER_NAME(FlxEase_obj::B2,"B2");
	HX_MARK_MEMBER_NAME(FlxEase_obj::B3,"B3");
	HX_MARK_MEMBER_NAME(FlxEase_obj::B4,"B4");
	HX_MARK_MEMBER_NAME(FlxEase_obj::B5,"B5");
	HX_MARK_MEMBER_NAME(FlxEase_obj::B6,"B6");
	HX_MARK_MEMBER_NAME(FlxEase_obj::ELASTIC_AMPLITUDE,"ELASTIC_AMPLITUDE");
	HX_MARK_MEMBER_NAME(FlxEase_obj::ELASTIC_PERIOD,"ELASTIC_PERIOD");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxEase_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxEase_obj::PI2,"PI2");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::EL,"EL");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::B1,"B1");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::B2,"B2");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::B3,"B3");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::B4,"B4");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::B5,"B5");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::B6,"B6");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::ELASTIC_AMPLITUDE,"ELASTIC_AMPLITUDE");
	HX_VISIT_MEMBER_NAME(FlxEase_obj::ELASTIC_PERIOD,"ELASTIC_PERIOD");
};

#endif

::hx::Class FlxEase_obj::__mClass;

static ::String FlxEase_obj_sStaticFields[] = {
	HX_("PI2",19,f4,3c,00),
	HX_("EL",67,3c,00,00),
	HX_("B1",af,39,00,00),
	HX_("B2",b0,39,00,00),
	HX_("B3",b1,39,00,00),
	HX_("B4",b2,39,00,00),
	HX_("B5",b3,39,00,00),
	HX_("B6",b4,39,00,00),
	HX_("ELASTIC_AMPLITUDE",d9,ea,04,7e),
	HX_("ELASTIC_PERIOD",8b,99,23,3b),
	HX_("linear",e5,51,a0,ec),
	HX_("quadIn",8c,78,9f,cc),
	HX_("quadOut",07,96,ee,3e),
	HX_("quadInOut",62,bf,21,4f),
	HX_("cubeIn",3a,64,4a,34),
	HX_("cubeOut",99,e2,d1,8c),
	HX_("cubeInOut",74,d4,de,55),
	HX_("quartIn",c4,7f,4b,48),
	HX_("quartOut",cf,df,c8,f9),
	HX_("quartInOut",2a,0b,78,2c),
	HX_("quintIn",50,49,db,e0),
	HX_("quintOut",c3,70,09,df),
	HX_("quintInOut",1e,c1,b5,4f),
	HX_("smoothStepIn",1f,65,6e,4b),
	HX_("smoothStepOut",14,aa,2e,b5),
	HX_("smoothStepInOut",af,b0,98,e4),
	HX_("smootherStepIn",cc,d4,bb,af),
	HX_("smootherStepOut",c7,f1,a2,14),
	HX_("smootherStepInOut",22,8b,74,3f),
	HX_("sineIn",92,c3,1f,b9),
	HX_("sineOut",41,f0,af,42),
	HX_("sineInOut",1c,9c,99,c9),
	HX_("bounceIn",8d,37,b0,4c),
	HX_("bounceOut",e6,f7,84,cd),
	HX_("bounceInOut",01,97,7b,79),
	HX_("circIn",9c,53,0d,56),
	HX_("circOut",f7,68,a0,f5),
	HX_("circInOut",52,2e,22,74),
	HX_("expoIn",b7,6d,7d,c4),
	HX_("expoOut",7c,26,47,29),
	HX_("expoInOut",17,17,17,ed),
	HX_("backIn",ec,31,99,4a),
	HX_("backOut",a7,10,77,fb),
	HX_("backInOut",02,22,b6,9a),
	HX_("elasticIn",1a,21,61,27),
	HX_("elasticOut",b9,69,a0,4d),
	HX_("elasticInOut",94,63,b5,cc),
	::String(null())
};

void FlxEase_obj::__register()
{
	FlxEase_obj _hx_dummy;
	FlxEase_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.tweens.FlxEase",6c,1c,e1,0d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxEase_obj::__GetStatic;
	__mClass->mSetStaticField = &FlxEase_obj::__SetStatic;
	__mClass->mMarkFunc = FlxEase_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxEase_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FlxEase_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxEase_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxEase_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxEase_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxEase_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_23_boot)
HXDLIN(  23)		PI2 = (::Math_obj::PI / ( (Float)(2) ));
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_25_boot)
HXDLIN(  25)		EL = ((( (Float)(2) ) * ::Math_obj::PI) / ((Float).45));
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_26_boot)
HXDLIN(  26)		B1 = ((Float)0.36363636363636365);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_27_boot)
HXDLIN(  27)		B2 = ((Float)0.72727272727272729);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_28_boot)
HXDLIN(  28)		B3 = ((Float)0.54545454545454541);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_29_boot)
HXDLIN(  29)		B4 = ((Float)0.90909090909090906);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_30_boot)
HXDLIN(  30)		B5 = ((Float)0.81818181818181823);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_31_boot)
HXDLIN(  31)		B6 = ((Float)0.95454545454545459);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_32_boot)
HXDLIN(  32)		ELASTIC_AMPLITUDE = ((Float)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_a9a0b53a43037f15_33_boot)
HXDLIN(  33)		ELASTIC_PERIOD = ((Float)0.4);
            	}
}

} // end namespace flixel
} // end namespace tweens
