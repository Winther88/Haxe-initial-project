// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadAnalogStick
#include <flixel/input/gamepad/FlxGamepadAnalogStick.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_id_LogitechID
#include <flixel/input/gamepad/id/LogitechID.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_32_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",32,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_33_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",33,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_34_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",34,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_35_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",35,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_36_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",36,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_37_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",37,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_38_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",38,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_39_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",39,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_40_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",40,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_41_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",41,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_42_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",42,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_43_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",43,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_46_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",46,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_47_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",47,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_48_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",48,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_49_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",49,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_52_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",52,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_55_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",55,0xeed1fefa)
HX_LOCAL_STACK_FRAME(_hx_pos_c72d0e38c48c7ce9_61_boot,"flixel.input.gamepad.id.LogitechID","boot",0xd297d7fa,"flixel.input.gamepad.id.LogitechID.boot","flixel/input/gamepad/id/LogitechID.hx",61,0xeed1fefa)
namespace flixel{
namespace input{
namespace gamepad{
namespace id{

void LogitechID_obj::__construct() { }

Dynamic LogitechID_obj::__CreateEmpty() { return new LogitechID_obj; }

void *LogitechID_obj::_hx_vtable = 0;

Dynamic LogitechID_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LogitechID_obj > _hx_result = new LogitechID_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LogitechID_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x53611d44;
}

int LogitechID_obj::ONE;

int LogitechID_obj::TWO;

int LogitechID_obj::THREE;

int LogitechID_obj::FOUR;

int LogitechID_obj::FIVE;

int LogitechID_obj::SIX;

int LogitechID_obj::SEVEN;

int LogitechID_obj::EIGHT;

int LogitechID_obj::NINE;

int LogitechID_obj::TEN;

int LogitechID_obj::LEFT_STICK_CLICK;

int LogitechID_obj::RIGHT_STICK_CLICK;

int LogitechID_obj::DPAD_UP;

int LogitechID_obj::DPAD_DOWN;

int LogitechID_obj::DPAD_LEFT;

int LogitechID_obj::DPAD_RIGHT;

int LogitechID_obj::LOGITECH;

 ::flixel::input::gamepad::FlxGamepadAnalogStick LogitechID_obj::LEFT_ANALOG_STICK;

 ::flixel::input::gamepad::FlxGamepadAnalogStick LogitechID_obj::RIGHT_ANALOG_STICK;


LogitechID_obj::LogitechID_obj()
{
}

bool LogitechID_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"LEFT_ANALOG_STICK") ) { outValue = ( LEFT_ANALOG_STICK ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"RIGHT_ANALOG_STICK") ) { outValue = ( RIGHT_ANALOG_STICK ); return true; }
	}
	return false;
}

bool LogitechID_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"LEFT_ANALOG_STICK") ) { LEFT_ANALOG_STICK=ioValue.Cast<  ::flixel::input::gamepad::FlxGamepadAnalogStick >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"RIGHT_ANALOG_STICK") ) { RIGHT_ANALOG_STICK=ioValue.Cast<  ::flixel::input::gamepad::FlxGamepadAnalogStick >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *LogitechID_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo LogitechID_obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &LogitechID_obj::ONE,HX_("ONE",46,36,3c,00)},
	{::hx::fsInt,(void *) &LogitechID_obj::TWO,HX_("TWO",6c,09,40,00)},
	{::hx::fsInt,(void *) &LogitechID_obj::THREE,HX_("THREE",3e,8c,7e,8d)},
	{::hx::fsInt,(void *) &LogitechID_obj::FOUR,HX_("FOUR",e6,2b,81,2e)},
	{::hx::fsInt,(void *) &LogitechID_obj::FIVE,HX_("FIVE",32,9f,7c,2e)},
	{::hx::fsInt,(void *) &LogitechID_obj::SIX,HX_("SIX",02,3b,3f,00)},
	{::hx::fsInt,(void *) &LogitechID_obj::SEVEN,HX_("SEVEN",ed,5c,1f,f8)},
	{::hx::fsInt,(void *) &LogitechID_obj::EIGHT,HX_("EIGHT",2f,b9,1c,eb)},
	{::hx::fsInt,(void *) &LogitechID_obj::NINE,HX_("NINE",32,4d,c6,33)},
	{::hx::fsInt,(void *) &LogitechID_obj::TEN,HX_("TEN",bd,f9,3f,00)},
	{::hx::fsInt,(void *) &LogitechID_obj::LEFT_STICK_CLICK,HX_("LEFT_STICK_CLICK",21,9d,4a,bf)},
	{::hx::fsInt,(void *) &LogitechID_obj::RIGHT_STICK_CLICK,HX_("RIGHT_STICK_CLICK",56,4c,25,0b)},
	{::hx::fsInt,(void *) &LogitechID_obj::DPAD_UP,HX_("DPAD_UP",6b,00,87,a2)},
	{::hx::fsInt,(void *) &LogitechID_obj::DPAD_DOWN,HX_("DPAD_DOWN",72,1a,5b,87)},
	{::hx::fsInt,(void *) &LogitechID_obj::DPAD_LEFT,HX_("DPAD_LEFT",17,2a,9d,8c)},
	{::hx::fsInt,(void *) &LogitechID_obj::DPAD_RIGHT,HX_("DPAD_RIGHT",ac,b7,f4,f3)},
	{::hx::fsInt,(void *) &LogitechID_obj::LOGITECH,HX_("LOGITECH",3b,00,6b,73)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxGamepadAnalogStick */ ,(void *) &LogitechID_obj::LEFT_ANALOG_STICK,HX_("LEFT_ANALOG_STICK",19,49,58,a5)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxGamepadAnalogStick */ ,(void *) &LogitechID_obj::RIGHT_ANALOG_STICK,HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void LogitechID_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LogitechID_obj::ONE,"ONE");
	HX_MARK_MEMBER_NAME(LogitechID_obj::TWO,"TWO");
	HX_MARK_MEMBER_NAME(LogitechID_obj::THREE,"THREE");
	HX_MARK_MEMBER_NAME(LogitechID_obj::FOUR,"FOUR");
	HX_MARK_MEMBER_NAME(LogitechID_obj::FIVE,"FIVE");
	HX_MARK_MEMBER_NAME(LogitechID_obj::SIX,"SIX");
	HX_MARK_MEMBER_NAME(LogitechID_obj::SEVEN,"SEVEN");
	HX_MARK_MEMBER_NAME(LogitechID_obj::EIGHT,"EIGHT");
	HX_MARK_MEMBER_NAME(LogitechID_obj::NINE,"NINE");
	HX_MARK_MEMBER_NAME(LogitechID_obj::TEN,"TEN");
	HX_MARK_MEMBER_NAME(LogitechID_obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(LogitechID_obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(LogitechID_obj::DPAD_UP,"DPAD_UP");
	HX_MARK_MEMBER_NAME(LogitechID_obj::DPAD_DOWN,"DPAD_DOWN");
	HX_MARK_MEMBER_NAME(LogitechID_obj::DPAD_LEFT,"DPAD_LEFT");
	HX_MARK_MEMBER_NAME(LogitechID_obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_MARK_MEMBER_NAME(LogitechID_obj::LOGITECH,"LOGITECH");
	HX_MARK_MEMBER_NAME(LogitechID_obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_MARK_MEMBER_NAME(LogitechID_obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LogitechID_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LogitechID_obj::ONE,"ONE");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::TWO,"TWO");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::THREE,"THREE");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::FOUR,"FOUR");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::FIVE,"FIVE");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::SIX,"SIX");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::SEVEN,"SEVEN");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::EIGHT,"EIGHT");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::NINE,"NINE");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::TEN,"TEN");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::DPAD_UP,"DPAD_UP");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::DPAD_DOWN,"DPAD_DOWN");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::DPAD_LEFT,"DPAD_LEFT");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::LOGITECH,"LOGITECH");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_VISIT_MEMBER_NAME(LogitechID_obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#endif

::hx::Class LogitechID_obj::__mClass;

static ::String LogitechID_obj_sStaticFields[] = {
	HX_("ONE",46,36,3c,00),
	HX_("TWO",6c,09,40,00),
	HX_("THREE",3e,8c,7e,8d),
	HX_("FOUR",e6,2b,81,2e),
	HX_("FIVE",32,9f,7c,2e),
	HX_("SIX",02,3b,3f,00),
	HX_("SEVEN",ed,5c,1f,f8),
	HX_("EIGHT",2f,b9,1c,eb),
	HX_("NINE",32,4d,c6,33),
	HX_("TEN",bd,f9,3f,00),
	HX_("LEFT_STICK_CLICK",21,9d,4a,bf),
	HX_("RIGHT_STICK_CLICK",56,4c,25,0b),
	HX_("DPAD_UP",6b,00,87,a2),
	HX_("DPAD_DOWN",72,1a,5b,87),
	HX_("DPAD_LEFT",17,2a,9d,8c),
	HX_("DPAD_RIGHT",ac,b7,f4,f3),
	HX_("LOGITECH",3b,00,6b,73),
	HX_("LEFT_ANALOG_STICK",19,49,58,a5),
	HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8),
	::String(null())
};

void LogitechID_obj::__register()
{
	LogitechID_obj _hx_dummy;
	LogitechID_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.input.gamepad.id.LogitechID",a6,a1,48,7a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &LogitechID_obj::__GetStatic;
	__mClass->mSetStaticField = &LogitechID_obj::__SetStatic;
	__mClass->mMarkFunc = LogitechID_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(LogitechID_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< LogitechID_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LogitechID_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LogitechID_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LogitechID_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void LogitechID_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_32_boot)
HXDLIN(  32)		ONE = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_33_boot)
HXDLIN(  33)		TWO = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_34_boot)
HXDLIN(  34)		THREE = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_35_boot)
HXDLIN(  35)		FOUR = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_36_boot)
HXDLIN(  36)		FIVE = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_37_boot)
HXDLIN(  37)		SIX = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_38_boot)
HXDLIN(  38)		SEVEN = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_39_boot)
HXDLIN(  39)		EIGHT = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_40_boot)
HXDLIN(  40)		NINE = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_41_boot)
HXDLIN(  41)		TEN = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_42_boot)
HXDLIN(  42)		LEFT_STICK_CLICK = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_43_boot)
HXDLIN(  43)		RIGHT_STICK_CLICK = 11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_46_boot)
HXDLIN(  46)		DPAD_UP = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_47_boot)
HXDLIN(  47)		DPAD_DOWN = 17;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_48_boot)
HXDLIN(  48)		DPAD_LEFT = 18;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_49_boot)
HXDLIN(  49)		DPAD_RIGHT = 19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_52_boot)
HXDLIN(  52)		LOGITECH = -5;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_55_boot)
HXDLIN(  55)		LEFT_ANALOG_STICK =  ::flixel::input::gamepad::FlxGamepadAnalogStick_obj::__alloc( HX_CTX ,0,1, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),27)
            			->setFixed(1,HX_("up",5b,66,00,00),24)
            			->setFixed(2,HX_("down",62,f8,6d,42),25)
            			->setFixed(3,HX_("left",07,08,b0,47),26)));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_c72d0e38c48c7ce9_61_boot)
HXDLIN(  61)		RIGHT_ANALOG_STICK =  ::flixel::input::gamepad::FlxGamepadAnalogStick_obj::__alloc( HX_CTX ,2,3, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),31)
            			->setFixed(1,HX_("up",5b,66,00,00),28)
            			->setFixed(2,HX_("down",62,f8,6d,42),29)
            			->setFixed(3,HX_("left",07,08,b0,47),30)));
            	}
}

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace id
