// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadAnalogStick
#include <flixel/input/gamepad/FlxGamepadAnalogStick.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_id_SwitchProID
#include <flixel/input/gamepad/id/SwitchProID.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_54_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",54,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_55_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",55,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_56_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",56,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_57_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",57,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_58_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",58,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_59_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",59,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_60_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",60,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_61_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",61,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_62_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",62,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_63_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",63,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_64_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",64,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_65_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",65,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_66_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",66,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_67_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",67,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_68_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",68,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_69_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",69,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_70_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",70,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_71_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",71,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_72_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",72,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_abd7c441c323b18e_78_boot,"flixel.input.gamepad.id.SwitchProID","boot",0x4db3b8fc,"flixel.input.gamepad.id.SwitchProID.boot","flixel/input/gamepad/id/SwitchProID.hx",78,0xcca574f8)
namespace flixel{
namespace input{
namespace gamepad{
namespace id{

void SwitchProID_obj::__construct() { }

Dynamic SwitchProID_obj::__CreateEmpty() { return new SwitchProID_obj; }

void *SwitchProID_obj::_hx_vtable = 0;

Dynamic SwitchProID_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SwitchProID_obj > _hx_result = new SwitchProID_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SwitchProID_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4558d1a2;
}

int SwitchProID_obj::ZL;

int SwitchProID_obj::ZR;

int SwitchProID_obj::B;

int SwitchProID_obj::A;

int SwitchProID_obj::Y;

int SwitchProID_obj::X;

int SwitchProID_obj::MINUS;

int SwitchProID_obj::HOME;

int SwitchProID_obj::PLUS;

int SwitchProID_obj::LEFT_STICK_CLICK;

int SwitchProID_obj::RIGHT_STICK_CLICK;

int SwitchProID_obj::L;

int SwitchProID_obj::R;

int SwitchProID_obj::DPAD_UP;

int SwitchProID_obj::DPAD_DOWN;

int SwitchProID_obj::DPAD_LEFT;

int SwitchProID_obj::DPAD_RIGHT;

int SwitchProID_obj::CAPTURE;

 ::flixel::input::gamepad::FlxGamepadAnalogStick SwitchProID_obj::LEFT_ANALOG_STICK;

 ::flixel::input::gamepad::FlxGamepadAnalogStick SwitchProID_obj::RIGHT_ANALOG_STICK;


SwitchProID_obj::SwitchProID_obj()
{
}

bool SwitchProID_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"LEFT_ANALOG_STICK") ) { outValue = ( LEFT_ANALOG_STICK ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"RIGHT_ANALOG_STICK") ) { outValue = ( RIGHT_ANALOG_STICK ); return true; }
	}
	return false;
}

bool SwitchProID_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"LEFT_ANALOG_STICK") ) { LEFT_ANALOG_STICK=ioValue.Cast<  ::flixel::input::gamepad::FlxGamepadAnalogStick >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"RIGHT_ANALOG_STICK") ) { RIGHT_ANALOG_STICK=ioValue.Cast<  ::flixel::input::gamepad::FlxGamepadAnalogStick >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SwitchProID_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo SwitchProID_obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &SwitchProID_obj::ZL,HX_("ZL",b2,4e,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::ZR,HX_("ZR",b8,4e,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::B,HX_("B",42,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::A,HX_("A",41,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::Y,HX_("Y",59,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::X,HX_("X",58,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::MINUS,HX_("MINUS",50,b8,56,86)},
	{::hx::fsInt,(void *) &SwitchProID_obj::HOME,HX_("HOME",1f,92,d3,2f)},
	{::hx::fsInt,(void *) &SwitchProID_obj::PLUS,HX_("PLUS",5a,07,1b,35)},
	{::hx::fsInt,(void *) &SwitchProID_obj::LEFT_STICK_CLICK,HX_("LEFT_STICK_CLICK",21,9d,4a,bf)},
	{::hx::fsInt,(void *) &SwitchProID_obj::RIGHT_STICK_CLICK,HX_("RIGHT_STICK_CLICK",56,4c,25,0b)},
	{::hx::fsInt,(void *) &SwitchProID_obj::L,HX_("L",4c,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::R,HX_("R",52,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_obj::DPAD_UP,HX_("DPAD_UP",6b,00,87,a2)},
	{::hx::fsInt,(void *) &SwitchProID_obj::DPAD_DOWN,HX_("DPAD_DOWN",72,1a,5b,87)},
	{::hx::fsInt,(void *) &SwitchProID_obj::DPAD_LEFT,HX_("DPAD_LEFT",17,2a,9d,8c)},
	{::hx::fsInt,(void *) &SwitchProID_obj::DPAD_RIGHT,HX_("DPAD_RIGHT",ac,b7,f4,f3)},
	{::hx::fsInt,(void *) &SwitchProID_obj::CAPTURE,HX_("CAPTURE",66,a4,25,27)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxGamepadAnalogStick */ ,(void *) &SwitchProID_obj::LEFT_ANALOG_STICK,HX_("LEFT_ANALOG_STICK",19,49,58,a5)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxGamepadAnalogStick */ ,(void *) &SwitchProID_obj::RIGHT_ANALOG_STICK,HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void SwitchProID_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SwitchProID_obj::ZL,"ZL");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::ZR,"ZR");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::B,"B");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::A,"A");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::Y,"Y");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::X,"X");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::MINUS,"MINUS");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::HOME,"HOME");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::PLUS,"PLUS");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::L,"L");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::R,"R");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::DPAD_UP,"DPAD_UP");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::DPAD_DOWN,"DPAD_DOWN");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::DPAD_LEFT,"DPAD_LEFT");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::CAPTURE,"CAPTURE");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_MARK_MEMBER_NAME(SwitchProID_obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SwitchProID_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::ZL,"ZL");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::ZR,"ZR");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::B,"B");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::A,"A");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::Y,"Y");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::X,"X");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::MINUS,"MINUS");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::HOME,"HOME");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::PLUS,"PLUS");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::L,"L");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::R,"R");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::DPAD_UP,"DPAD_UP");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::DPAD_DOWN,"DPAD_DOWN");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::DPAD_LEFT,"DPAD_LEFT");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::CAPTURE,"CAPTURE");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_VISIT_MEMBER_NAME(SwitchProID_obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#endif

::hx::Class SwitchProID_obj::__mClass;

static ::String SwitchProID_obj_sStaticFields[] = {
	HX_("ZL",b2,4e,00,00),
	HX_("ZR",b8,4e,00,00),
	HX_("B",42,00,00,00),
	HX_("A",41,00,00,00),
	HX_("Y",59,00,00,00),
	HX_("X",58,00,00,00),
	HX_("MINUS",50,b8,56,86),
	HX_("HOME",1f,92,d3,2f),
	HX_("PLUS",5a,07,1b,35),
	HX_("LEFT_STICK_CLICK",21,9d,4a,bf),
	HX_("RIGHT_STICK_CLICK",56,4c,25,0b),
	HX_("L",4c,00,00,00),
	HX_("R",52,00,00,00),
	HX_("DPAD_UP",6b,00,87,a2),
	HX_("DPAD_DOWN",72,1a,5b,87),
	HX_("DPAD_LEFT",17,2a,9d,8c),
	HX_("DPAD_RIGHT",ac,b7,f4,f3),
	HX_("CAPTURE",66,a4,25,27),
	HX_("LEFT_ANALOG_STICK",19,49,58,a5),
	HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8),
	::String(null())
};

void SwitchProID_obj::__register()
{
	SwitchProID_obj _hx_dummy;
	SwitchProID_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.input.gamepad.id.SwitchProID",e4,5f,fc,ae);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SwitchProID_obj::__GetStatic;
	__mClass->mSetStaticField = &SwitchProID_obj::__SetStatic;
	__mClass->mMarkFunc = SwitchProID_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SwitchProID_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SwitchProID_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SwitchProID_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SwitchProID_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SwitchProID_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void SwitchProID_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_54_boot)
HXDLIN(  54)		ZL = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_55_boot)
HXDLIN(  55)		ZR = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_56_boot)
HXDLIN(  56)		B = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_57_boot)
HXDLIN(  57)		A = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_58_boot)
HXDLIN(  58)		Y = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_59_boot)
HXDLIN(  59)		X = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_60_boot)
HXDLIN(  60)		MINUS = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_61_boot)
HXDLIN(  61)		HOME = 11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_62_boot)
HXDLIN(  62)		PLUS = 12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_63_boot)
HXDLIN(  63)		LEFT_STICK_CLICK = 13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_64_boot)
HXDLIN(  64)		RIGHT_STICK_CLICK = 14;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_65_boot)
HXDLIN(  65)		L = 15;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_66_boot)
HXDLIN(  66)		R = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_67_boot)
HXDLIN(  67)		DPAD_UP = 17;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_68_boot)
HXDLIN(  68)		DPAD_DOWN = 18;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_69_boot)
HXDLIN(  69)		DPAD_LEFT = 19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_70_boot)
HXDLIN(  70)		DPAD_RIGHT = 20;
            	}
{
            	HX_STACKFRAME(&_hx_pos_abd7c441c323b18e_71_boot)
HXDLIN(  71)		CAPTURE = 21;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_abd7c441c323b18e_72_boot)
HXDLIN(  72)		LEFT_ANALOG_STICK =  ::flixel::input::gamepad::FlxGamepadAnalogStick_obj::__alloc( HX_CTX ,0,1, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),25)
            			->setFixed(1,HX_("up",5b,66,00,00),22)
            			->setFixed(2,HX_("down",62,f8,6d,42),23)
            			->setFixed(3,HX_("left",07,08,b0,47),24)));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_abd7c441c323b18e_78_boot)
HXDLIN(  78)		RIGHT_ANALOG_STICK =  ::flixel::input::gamepad::FlxGamepadAnalogStick_obj::__alloc( HX_CTX ,2,3, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),29)
            			->setFixed(1,HX_("up",5b,66,00,00),26)
            			->setFixed(2,HX_("down",62,f8,6d,42),27)
            			->setFixed(3,HX_("left",07,08,b0,47),28)));
            	}
}

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace id
