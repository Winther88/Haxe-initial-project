// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display__internal_DrawCommandBuffer
#include <openfl/display/_internal/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl_display__internal_DrawCommandReader
#include <openfl/display/_internal/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl_display__internal_DrawCommandType
#include <openfl/display/_internal/DrawCommandType.h>
#endif
#ifndef INCLUDED_openfl_display__internal_ShaderBuffer
#include <openfl/display/_internal/ShaderBuffer.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fae278bbae08f83e_39_new,"openfl.display._internal.DrawCommandBuffer","new",0xbf07e5fd,"openfl.display._internal.DrawCommandBuffer.new","openfl/display/_internal/DrawCommandBuffer.hx",39,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_59_append,"openfl.display._internal.DrawCommandBuffer","append",0x42e16c5d,"openfl.display._internal.DrawCommandBuffer.append","openfl/display/_internal/DrawCommandBuffer.hx",59,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_152_beginBitmapFill,"openfl.display._internal.DrawCommandBuffer","beginBitmapFill",0xf81456b8,"openfl.display._internal.DrawCommandBuffer.beginBitmapFill","openfl/display/_internal/DrawCommandBuffer.hx",152,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_163_beginFill,"openfl.display._internal.DrawCommandBuffer","beginFill",0x0db156a9,"openfl.display._internal.DrawCommandBuffer.beginFill","openfl/display/_internal/DrawCommandBuffer.hx",163,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_173_beginGradientFill,"openfl.display._internal.DrawCommandBuffer","beginGradientFill",0xc2230ab9,"openfl.display._internal.DrawCommandBuffer.beginGradientFill","openfl/display/_internal/DrawCommandBuffer.hx",173,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_188_beginShaderFill,"openfl.display._internal.DrawCommandBuffer","beginShaderFill",0xf54fd8ee,"openfl.display._internal.DrawCommandBuffer.beginShaderFill","openfl/display/_internal/DrawCommandBuffer.hx",188,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_196_clear,"openfl.display._internal.DrawCommandBuffer","clear",0x2c75e86a,"openfl.display._internal.DrawCommandBuffer.clear","openfl/display/_internal/DrawCommandBuffer.hx",196,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_210_copy,"openfl.display._internal.DrawCommandBuffer","copy",0x60a38f78,"openfl.display._internal.DrawCommandBuffer.copy","openfl/display/_internal/DrawCommandBuffer.hx",210,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_217_cubicCurveTo,"openfl.display._internal.DrawCommandBuffer","cubicCurveTo",0x02dcd6a3,"openfl.display._internal.DrawCommandBuffer.cubicCurveTo","openfl/display/_internal/DrawCommandBuffer.hx",217,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_230_curveTo,"openfl.display._internal.DrawCommandBuffer","curveTo",0xc7540827,"openfl.display._internal.DrawCommandBuffer.curveTo","openfl/display/_internal/DrawCommandBuffer.hx",230,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_241_destroy,"openfl.display._internal.DrawCommandBuffer","destroy",0x1d51d517,"openfl.display._internal.DrawCommandBuffer.destroy","openfl/display/_internal/DrawCommandBuffer.hx",241,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_255_drawCircle,"openfl.display._internal.DrawCommandBuffer","drawCircle",0x0ee97537,"openfl.display._internal.DrawCommandBuffer.drawCircle","openfl/display/_internal/DrawCommandBuffer.hx",255,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_265_drawEllipse,"openfl.display._internal.DrawCommandBuffer","drawEllipse",0x132cffd7,"openfl.display._internal.DrawCommandBuffer.drawEllipse","openfl/display/_internal/DrawCommandBuffer.hx",265,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_276_drawQuads,"openfl.display._internal.DrawCommandBuffer","drawQuads",0xa70e5485,"openfl.display._internal.DrawCommandBuffer.drawQuads","openfl/display/_internal/DrawCommandBuffer.hx",276,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_286_drawRect,"openfl.display._internal.DrawCommandBuffer","drawRect",0x1978688b,"openfl.display._internal.DrawCommandBuffer.drawRect","openfl/display/_internal/DrawCommandBuffer.hx",286,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_297_drawRoundRect,"openfl.display._internal.DrawCommandBuffer","drawRoundRect",0xd192dfcb,"openfl.display._internal.DrawCommandBuffer.drawRoundRect","openfl/display/_internal/DrawCommandBuffer.hx",297,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_310_drawTriangles,"openfl.display._internal.DrawCommandBuffer","drawTriangles",0xcd505fe4,"openfl.display._internal.DrawCommandBuffer.drawTriangles","openfl/display/_internal/DrawCommandBuffer.hx",310,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_321_endFill,"openfl.display._internal.DrawCommandBuffer","endFill",0x1eac301b,"openfl.display._internal.DrawCommandBuffer.endFill","openfl/display/_internal/DrawCommandBuffer.hx",321,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_328_lineBitmapStyle,"openfl.display._internal.DrawCommandBuffer","lineBitmapStyle",0xd32dcc4b,"openfl.display._internal.DrawCommandBuffer.lineBitmapStyle","openfl/display/_internal/DrawCommandBuffer.hx",328,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_340_lineGradientStyle,"openfl.display._internal.DrawCommandBuffer","lineGradientStyle",0x5611f2ea,"openfl.display._internal.DrawCommandBuffer.lineGradientStyle","openfl/display/_internal/DrawCommandBuffer.hx",340,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_356_lineStyle,"openfl.display._internal.DrawCommandBuffer","lineStyle",0x4c3451fa,"openfl.display._internal.DrawCommandBuffer.lineStyle","openfl/display/_internal/DrawCommandBuffer.hx",356,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_371_lineTo,"openfl.display._internal.DrawCommandBuffer","lineTo",0x9fadd112,"openfl.display._internal.DrawCommandBuffer.lineTo","openfl/display/_internal/DrawCommandBuffer.hx",371,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_380_moveTo,"openfl.display._internal.DrawCommandBuffer","moveTo",0x7fba5d6f,"openfl.display._internal.DrawCommandBuffer.moveTo","openfl/display/_internal/DrawCommandBuffer.hx",380,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_390_prepareWrite,"openfl.display._internal.DrawCommandBuffer","prepareWrite",0x1856309b,"openfl.display._internal.DrawCommandBuffer.prepareWrite","openfl/display/_internal/DrawCommandBuffer.hx",390,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_405_overrideBlendMode,"openfl.display._internal.DrawCommandBuffer","overrideBlendMode",0x8e09c6c5,"openfl.display._internal.DrawCommandBuffer.overrideBlendMode","openfl/display/_internal/DrawCommandBuffer.hx",405,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_413_overrideMatrix,"openfl.display._internal.DrawCommandBuffer","overrideMatrix",0xd5d9d330,"openfl.display._internal.DrawCommandBuffer.overrideMatrix","openfl/display/_internal/DrawCommandBuffer.hx",413,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_421_windingEvenOdd,"openfl.display._internal.DrawCommandBuffer","windingEvenOdd",0x273aa23e,"openfl.display._internal.DrawCommandBuffer.windingEvenOdd","openfl/display/_internal/DrawCommandBuffer.hx",421,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_428_windingNonZero,"openfl.display._internal.DrawCommandBuffer","windingNonZero",0xf26ffa5e,"openfl.display._internal.DrawCommandBuffer.windingNonZero","openfl/display/_internal/DrawCommandBuffer.hx",428,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_437_get_length,"openfl.display._internal.DrawCommandBuffer","get_length",0x06a78cb2,"openfl.display._internal.DrawCommandBuffer.get_length","openfl/display/_internal/DrawCommandBuffer.hx",437,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_22_boot,"openfl.display._internal.DrawCommandBuffer","boot",0x5ffa57f5,"openfl.display._internal.DrawCommandBuffer.boot","openfl/display/_internal/DrawCommandBuffer.hx",22,0x2aaa1b16)
HX_LOCAL_STACK_FRAME(_hx_pos_fae278bbae08f83e_24_boot,"openfl.display._internal.DrawCommandBuffer","boot",0x5ffa57f5,"openfl.display._internal.DrawCommandBuffer.boot","openfl/display/_internal/DrawCommandBuffer.hx",24,0x2aaa1b16)
namespace openfl{
namespace display{
namespace _internal{

void DrawCommandBuffer_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_39_new)
HXDLIN(  39)		if (::hx::IsNull( ::openfl::display::_internal::DrawCommandBuffer_obj::empty )) {
HXLINE(  41)			this->types = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  43)			this->b = ::Array_obj< bool >::__new(0);
HXLINE(  44)			this->i = ::Array_obj< int >::__new(0);
HXLINE(  45)			this->f = ::Array_obj< Float >::__new(0);
HXLINE(  46)			this->o = ::cpp::VirtualArray_obj::__new(0);
HXLINE(  47)			this->ff = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  48)			this->ii = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  50)			this->copyOnWrite = true;
            		}
            		else {
HXLINE(  54)			this->clear();
            		}
            	}

Dynamic DrawCommandBuffer_obj::__CreateEmpty() { return new DrawCommandBuffer_obj; }

void *DrawCommandBuffer_obj::_hx_vtable = 0;

Dynamic DrawCommandBuffer_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DrawCommandBuffer_obj > _hx_result = new DrawCommandBuffer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DrawCommandBuffer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x04a7ef7d;
}

 ::openfl::display::_internal::DrawCommandBuffer DrawCommandBuffer_obj::append( ::openfl::display::_internal::DrawCommandBuffer other){
            	HX_GC_STACKFRAME(&_hx_pos_fae278bbae08f83e_59_append)
HXLINE(  60)		if ((this->get_length() == 0)) {
HXLINE(  62)			this->types = other->types;
HXLINE(  63)			this->b = other->b;
HXLINE(  64)			this->i = other->i;
HXLINE(  65)			this->f = other->f;
HXLINE(  66)			this->o = other->o;
HXLINE(  67)			this->ff = other->ff;
HXLINE(  68)			this->ii = other->ii;
HXLINE(  69)			this->copyOnWrite = (other->copyOnWrite = true);
HXLINE(  71)			return other;
            		}
HXLINE(  74)		 ::openfl::display::_internal::DrawCommandReader data =  ::openfl::display::_internal::DrawCommandReader_obj::__alloc( HX_CTX ,other);
HXLINE(  76)		{
HXLINE(  76)			int _g = 0;
HXDLIN(  76)			::Array< ::Dynamic> _g1 = other->types;
HXDLIN(  76)			while((_g < _g1->length)){
HXLINE(  76)				 ::openfl::display::_internal::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::display::_internal::DrawCommandType >();
HXDLIN(  76)				_g = (_g + 1);
HXLINE(  78)				switch((int)(type->_hx_getIndex())){
            					case (int)0: {
HXLINE(  81)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data1 = data;
HXDLIN(  81)								data1->oPos = (data1->oPos + 2);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data2 = data;
HXDLIN(  81)								data2->bPos = (data2->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data3 = data;
HXDLIN(  81)								data3->iPos = (data3->iPos + 1);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data4 = data;
HXDLIN(  81)								data4->fPos = (data4->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data5 = data;
HXDLIN(  81)								data5->oPos = (data5->oPos + 4);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data6 = data;
HXDLIN(  81)								data6->iiPos = (data6->iiPos + 2);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data7 = data;
HXDLIN(  81)								data7->ffPos = (data7->ffPos + 1);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data8 = data;
HXDLIN(  81)								data8->fPos = (data8->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data9 = data;
HXDLIN(  81)								data9->oPos = (data9->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data10 = data;
HXDLIN(  81)								data10->fPos = (data10->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data11 = data;
HXDLIN(  81)								data11->fPos = (data11->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data12 = data;
HXDLIN(  81)								data12->fPos = (data12->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data13 = data;
HXDLIN(  81)								data13->fPos = (data13->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data14 = data;
HXDLIN(  81)								data14->oPos = (data14->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data15 = data;
HXDLIN(  81)								data15->fPos = (data15->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data16 = data;
HXDLIN(  81)								data16->fPos = (data16->fPos + 5);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data17 = data;
HXDLIN(  81)								data17->oPos = (data17->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data18 = data;
HXDLIN(  81)								data18->oPos = (data18->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data19 = data;
HXDLIN(  81)								data19->oPos = (data19->oPos + 2);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data20 = data;
HXDLIN(  81)								data20->bPos = (data20->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data21 = data;
HXDLIN(  81)								data21->oPos = (data21->oPos + 4);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data22 = data;
HXDLIN(  81)								data22->iiPos = (data22->iiPos + 2);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data23 = data;
HXDLIN(  81)								data23->ffPos = (data23->ffPos + 1);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data24 = data;
HXDLIN(  81)								data24->fPos = (data24->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data25 = data;
HXDLIN(  81)								data25->oPos = (data25->oPos + 4);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data26 = data;
HXDLIN(  81)								data26->iPos = (data26->iPos + 1);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data27 = data;
HXDLIN(  81)								data27->fPos = (data27->fPos + 2);
HXDLIN(  81)								 ::openfl::display::_internal::DrawCommandReader data28 = data;
HXDLIN(  81)								data28->bPos = (data28->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data29 = data;
HXDLIN(  81)								data29->fPos = (data29->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data30 = data;
HXDLIN(  81)								data30->fPos = (data30->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data31 = data;
HXDLIN(  81)								data31->oPos = (data31->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(  81)								 ::openfl::display::_internal::DrawCommandReader data32 = data;
HXDLIN(  81)								data32->oPos = (data32->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(  81)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN(  81)						 ::openfl::display::_internal::DrawCommandReader c = data;
HXLINE(  82)						this->beginBitmapFill(( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) ),( ( ::openfl::geom::Matrix)(c->buffer->o->__get((c->oPos + 1))) ),c->buffer->b->__get(c->bPos),c->buffer->b->__get((c->bPos + 1)));
            					}
            					break;
            					case (int)1: {
HXLINE(  84)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data33 = data;
HXDLIN(  84)								data33->oPos = (data33->oPos + 2);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data34 = data;
HXDLIN(  84)								data34->bPos = (data34->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data35 = data;
HXDLIN(  84)								data35->iPos = (data35->iPos + 1);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data36 = data;
HXDLIN(  84)								data36->fPos = (data36->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data37 = data;
HXDLIN(  84)								data37->oPos = (data37->oPos + 4);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data38 = data;
HXDLIN(  84)								data38->iiPos = (data38->iiPos + 2);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data39 = data;
HXDLIN(  84)								data39->ffPos = (data39->ffPos + 1);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data40 = data;
HXDLIN(  84)								data40->fPos = (data40->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data41 = data;
HXDLIN(  84)								data41->oPos = (data41->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data42 = data;
HXDLIN(  84)								data42->fPos = (data42->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data43 = data;
HXDLIN(  84)								data43->fPos = (data43->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data44 = data;
HXDLIN(  84)								data44->fPos = (data44->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data45 = data;
HXDLIN(  84)								data45->fPos = (data45->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data46 = data;
HXDLIN(  84)								data46->oPos = (data46->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data47 = data;
HXDLIN(  84)								data47->fPos = (data47->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data48 = data;
HXDLIN(  84)								data48->fPos = (data48->fPos + 5);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data49 = data;
HXDLIN(  84)								data49->oPos = (data49->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data50 = data;
HXDLIN(  84)								data50->oPos = (data50->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data51 = data;
HXDLIN(  84)								data51->oPos = (data51->oPos + 2);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data52 = data;
HXDLIN(  84)								data52->bPos = (data52->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data53 = data;
HXDLIN(  84)								data53->oPos = (data53->oPos + 4);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data54 = data;
HXDLIN(  84)								data54->iiPos = (data54->iiPos + 2);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data55 = data;
HXDLIN(  84)								data55->ffPos = (data55->ffPos + 1);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data56 = data;
HXDLIN(  84)								data56->fPos = (data56->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data57 = data;
HXDLIN(  84)								data57->oPos = (data57->oPos + 4);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data58 = data;
HXDLIN(  84)								data58->iPos = (data58->iPos + 1);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data59 = data;
HXDLIN(  84)								data59->fPos = (data59->fPos + 2);
HXDLIN(  84)								 ::openfl::display::_internal::DrawCommandReader data60 = data;
HXDLIN(  84)								data60->bPos = (data60->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data61 = data;
HXDLIN(  84)								data61->fPos = (data61->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data62 = data;
HXDLIN(  84)								data62->fPos = (data62->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data63 = data;
HXDLIN(  84)								data63->oPos = (data63->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(  84)								 ::openfl::display::_internal::DrawCommandReader data64 = data;
HXDLIN(  84)								data64->oPos = (data64->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(  84)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN(  84)						 ::openfl::display::_internal::DrawCommandReader c1 = data;
HXLINE(  85)						this->beginFill(c1->buffer->i->__get(c1->iPos),c1->buffer->f->__get(c1->fPos));
            					}
            					break;
            					case (int)2: {
HXLINE(  87)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data65 = data;
HXDLIN(  87)								data65->oPos = (data65->oPos + 2);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data66 = data;
HXDLIN(  87)								data66->bPos = (data66->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data67 = data;
HXDLIN(  87)								data67->iPos = (data67->iPos + 1);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data68 = data;
HXDLIN(  87)								data68->fPos = (data68->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data69 = data;
HXDLIN(  87)								data69->oPos = (data69->oPos + 4);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data70 = data;
HXDLIN(  87)								data70->iiPos = (data70->iiPos + 2);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data71 = data;
HXDLIN(  87)								data71->ffPos = (data71->ffPos + 1);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data72 = data;
HXDLIN(  87)								data72->fPos = (data72->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data73 = data;
HXDLIN(  87)								data73->oPos = (data73->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data74 = data;
HXDLIN(  87)								data74->fPos = (data74->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data75 = data;
HXDLIN(  87)								data75->fPos = (data75->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data76 = data;
HXDLIN(  87)								data76->fPos = (data76->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data77 = data;
HXDLIN(  87)								data77->fPos = (data77->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data78 = data;
HXDLIN(  87)								data78->oPos = (data78->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data79 = data;
HXDLIN(  87)								data79->fPos = (data79->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data80 = data;
HXDLIN(  87)								data80->fPos = (data80->fPos + 5);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data81 = data;
HXDLIN(  87)								data81->oPos = (data81->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data82 = data;
HXDLIN(  87)								data82->oPos = (data82->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data83 = data;
HXDLIN(  87)								data83->oPos = (data83->oPos + 2);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data84 = data;
HXDLIN(  87)								data84->bPos = (data84->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data85 = data;
HXDLIN(  87)								data85->oPos = (data85->oPos + 4);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data86 = data;
HXDLIN(  87)								data86->iiPos = (data86->iiPos + 2);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data87 = data;
HXDLIN(  87)								data87->ffPos = (data87->ffPos + 1);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data88 = data;
HXDLIN(  87)								data88->fPos = (data88->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data89 = data;
HXDLIN(  87)								data89->oPos = (data89->oPos + 4);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data90 = data;
HXDLIN(  87)								data90->iPos = (data90->iPos + 1);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data91 = data;
HXDLIN(  87)								data91->fPos = (data91->fPos + 2);
HXDLIN(  87)								 ::openfl::display::_internal::DrawCommandReader data92 = data;
HXDLIN(  87)								data92->bPos = (data92->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data93 = data;
HXDLIN(  87)								data93->fPos = (data93->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data94 = data;
HXDLIN(  87)								data94->fPos = (data94->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data95 = data;
HXDLIN(  87)								data95->oPos = (data95->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(  87)								 ::openfl::display::_internal::DrawCommandReader data96 = data;
HXDLIN(  87)								data96->oPos = (data96->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(  87)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN(  87)						 ::openfl::display::_internal::DrawCommandReader c2 = data;
HXLINE(  88)						this->beginGradientFill(c2->buffer->o->__get(c2->oPos),c2->buffer->ii->__get(c2->iiPos).StaticCast< ::Array< int > >(),c2->buffer->ff->__get(c2->ffPos).StaticCast< ::Array< Float > >(),c2->buffer->ii->__get((c2->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c2->buffer->o->__get((c2->oPos + 1))) ),c2->buffer->o->__get((c2->oPos + 2)),c2->buffer->o->__get((c2->oPos + 3)),c2->buffer->f->__get(c2->fPos));
            					}
            					break;
            					case (int)3: {
HXLINE(  90)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data97 = data;
HXDLIN(  90)								data97->oPos = (data97->oPos + 2);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data98 = data;
HXDLIN(  90)								data98->bPos = (data98->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data99 = data;
HXDLIN(  90)								data99->iPos = (data99->iPos + 1);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data100 = data;
HXDLIN(  90)								data100->fPos = (data100->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data101 = data;
HXDLIN(  90)								data101->oPos = (data101->oPos + 4);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data102 = data;
HXDLIN(  90)								data102->iiPos = (data102->iiPos + 2);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data103 = data;
HXDLIN(  90)								data103->ffPos = (data103->ffPos + 1);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data104 = data;
HXDLIN(  90)								data104->fPos = (data104->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data105 = data;
HXDLIN(  90)								data105->oPos = (data105->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data106 = data;
HXDLIN(  90)								data106->fPos = (data106->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data107 = data;
HXDLIN(  90)								data107->fPos = (data107->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data108 = data;
HXDLIN(  90)								data108->fPos = (data108->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data109 = data;
HXDLIN(  90)								data109->fPos = (data109->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data110 = data;
HXDLIN(  90)								data110->oPos = (data110->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data111 = data;
HXDLIN(  90)								data111->fPos = (data111->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data112 = data;
HXDLIN(  90)								data112->fPos = (data112->fPos + 5);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data113 = data;
HXDLIN(  90)								data113->oPos = (data113->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data114 = data;
HXDLIN(  90)								data114->oPos = (data114->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data115 = data;
HXDLIN(  90)								data115->oPos = (data115->oPos + 2);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data116 = data;
HXDLIN(  90)								data116->bPos = (data116->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data117 = data;
HXDLIN(  90)								data117->oPos = (data117->oPos + 4);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data118 = data;
HXDLIN(  90)								data118->iiPos = (data118->iiPos + 2);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data119 = data;
HXDLIN(  90)								data119->ffPos = (data119->ffPos + 1);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data120 = data;
HXDLIN(  90)								data120->fPos = (data120->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data121 = data;
HXDLIN(  90)								data121->oPos = (data121->oPos + 4);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data122 = data;
HXDLIN(  90)								data122->iPos = (data122->iPos + 1);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data123 = data;
HXDLIN(  90)								data123->fPos = (data123->fPos + 2);
HXDLIN(  90)								 ::openfl::display::_internal::DrawCommandReader data124 = data;
HXDLIN(  90)								data124->bPos = (data124->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data125 = data;
HXDLIN(  90)								data125->fPos = (data125->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data126 = data;
HXDLIN(  90)								data126->fPos = (data126->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data127 = data;
HXDLIN(  90)								data127->oPos = (data127->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(  90)								 ::openfl::display::_internal::DrawCommandReader data128 = data;
HXDLIN(  90)								data128->oPos = (data128->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(  90)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN(  90)						 ::openfl::display::_internal::DrawCommandReader c3 = data;
HXLINE(  91)						this->beginShaderFill(( ( ::openfl::display::_internal::ShaderBuffer)(c3->buffer->o->__get(c3->oPos)) ));
            					}
            					break;
            					case (int)4: {
HXLINE(  93)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data129 = data;
HXDLIN(  93)								data129->oPos = (data129->oPos + 2);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data130 = data;
HXDLIN(  93)								data130->bPos = (data130->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data131 = data;
HXDLIN(  93)								data131->iPos = (data131->iPos + 1);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data132 = data;
HXDLIN(  93)								data132->fPos = (data132->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data133 = data;
HXDLIN(  93)								data133->oPos = (data133->oPos + 4);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data134 = data;
HXDLIN(  93)								data134->iiPos = (data134->iiPos + 2);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data135 = data;
HXDLIN(  93)								data135->ffPos = (data135->ffPos + 1);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data136 = data;
HXDLIN(  93)								data136->fPos = (data136->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data137 = data;
HXDLIN(  93)								data137->oPos = (data137->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data138 = data;
HXDLIN(  93)								data138->fPos = (data138->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data139 = data;
HXDLIN(  93)								data139->fPos = (data139->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data140 = data;
HXDLIN(  93)								data140->fPos = (data140->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data141 = data;
HXDLIN(  93)								data141->fPos = (data141->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data142 = data;
HXDLIN(  93)								data142->oPos = (data142->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data143 = data;
HXDLIN(  93)								data143->fPos = (data143->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data144 = data;
HXDLIN(  93)								data144->fPos = (data144->fPos + 5);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data145 = data;
HXDLIN(  93)								data145->oPos = (data145->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data146 = data;
HXDLIN(  93)								data146->oPos = (data146->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data147 = data;
HXDLIN(  93)								data147->oPos = (data147->oPos + 2);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data148 = data;
HXDLIN(  93)								data148->bPos = (data148->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data149 = data;
HXDLIN(  93)								data149->oPos = (data149->oPos + 4);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data150 = data;
HXDLIN(  93)								data150->iiPos = (data150->iiPos + 2);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data151 = data;
HXDLIN(  93)								data151->ffPos = (data151->ffPos + 1);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data152 = data;
HXDLIN(  93)								data152->fPos = (data152->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data153 = data;
HXDLIN(  93)								data153->oPos = (data153->oPos + 4);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data154 = data;
HXDLIN(  93)								data154->iPos = (data154->iPos + 1);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data155 = data;
HXDLIN(  93)								data155->fPos = (data155->fPos + 2);
HXDLIN(  93)								 ::openfl::display::_internal::DrawCommandReader data156 = data;
HXDLIN(  93)								data156->bPos = (data156->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data157 = data;
HXDLIN(  93)								data157->fPos = (data157->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data158 = data;
HXDLIN(  93)								data158->fPos = (data158->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data159 = data;
HXDLIN(  93)								data159->oPos = (data159->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(  93)								 ::openfl::display::_internal::DrawCommandReader data160 = data;
HXDLIN(  93)								data160->oPos = (data160->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(  93)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(  93)						 ::openfl::display::_internal::DrawCommandReader c4 = data;
HXLINE(  94)						this->cubicCurveTo(c4->buffer->f->__get(c4->fPos),c4->buffer->f->__get((c4->fPos + 1)),c4->buffer->f->__get((c4->fPos + 2)),c4->buffer->f->__get((c4->fPos + 3)),c4->buffer->f->__get((c4->fPos + 4)),c4->buffer->f->__get((c4->fPos + 5)));
            					}
            					break;
            					case (int)5: {
HXLINE(  96)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data161 = data;
HXDLIN(  96)								data161->oPos = (data161->oPos + 2);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data162 = data;
HXDLIN(  96)								data162->bPos = (data162->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data163 = data;
HXDLIN(  96)								data163->iPos = (data163->iPos + 1);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data164 = data;
HXDLIN(  96)								data164->fPos = (data164->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data165 = data;
HXDLIN(  96)								data165->oPos = (data165->oPos + 4);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data166 = data;
HXDLIN(  96)								data166->iiPos = (data166->iiPos + 2);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data167 = data;
HXDLIN(  96)								data167->ffPos = (data167->ffPos + 1);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data168 = data;
HXDLIN(  96)								data168->fPos = (data168->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data169 = data;
HXDLIN(  96)								data169->oPos = (data169->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data170 = data;
HXDLIN(  96)								data170->fPos = (data170->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data171 = data;
HXDLIN(  96)								data171->fPos = (data171->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data172 = data;
HXDLIN(  96)								data172->fPos = (data172->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data173 = data;
HXDLIN(  96)								data173->fPos = (data173->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data174 = data;
HXDLIN(  96)								data174->oPos = (data174->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data175 = data;
HXDLIN(  96)								data175->fPos = (data175->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data176 = data;
HXDLIN(  96)								data176->fPos = (data176->fPos + 5);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data177 = data;
HXDLIN(  96)								data177->oPos = (data177->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data178 = data;
HXDLIN(  96)								data178->oPos = (data178->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data179 = data;
HXDLIN(  96)								data179->oPos = (data179->oPos + 2);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data180 = data;
HXDLIN(  96)								data180->bPos = (data180->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data181 = data;
HXDLIN(  96)								data181->oPos = (data181->oPos + 4);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data182 = data;
HXDLIN(  96)								data182->iiPos = (data182->iiPos + 2);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data183 = data;
HXDLIN(  96)								data183->ffPos = (data183->ffPos + 1);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data184 = data;
HXDLIN(  96)								data184->fPos = (data184->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data185 = data;
HXDLIN(  96)								data185->oPos = (data185->oPos + 4);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data186 = data;
HXDLIN(  96)								data186->iPos = (data186->iPos + 1);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data187 = data;
HXDLIN(  96)								data187->fPos = (data187->fPos + 2);
HXDLIN(  96)								 ::openfl::display::_internal::DrawCommandReader data188 = data;
HXDLIN(  96)								data188->bPos = (data188->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data189 = data;
HXDLIN(  96)								data189->fPos = (data189->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data190 = data;
HXDLIN(  96)								data190->fPos = (data190->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data191 = data;
HXDLIN(  96)								data191->oPos = (data191->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(  96)								 ::openfl::display::_internal::DrawCommandReader data192 = data;
HXDLIN(  96)								data192->oPos = (data192->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(  96)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(  96)						 ::openfl::display::_internal::DrawCommandReader c5 = data;
HXLINE(  97)						this->curveTo(c5->buffer->f->__get(c5->fPos),c5->buffer->f->__get((c5->fPos + 1)),c5->buffer->f->__get((c5->fPos + 2)),c5->buffer->f->__get((c5->fPos + 3)));
            					}
            					break;
            					case (int)6: {
HXLINE(  99)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data193 = data;
HXDLIN(  99)								data193->oPos = (data193->oPos + 2);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data194 = data;
HXDLIN(  99)								data194->bPos = (data194->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data195 = data;
HXDLIN(  99)								data195->iPos = (data195->iPos + 1);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data196 = data;
HXDLIN(  99)								data196->fPos = (data196->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data197 = data;
HXDLIN(  99)								data197->oPos = (data197->oPos + 4);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data198 = data;
HXDLIN(  99)								data198->iiPos = (data198->iiPos + 2);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data199 = data;
HXDLIN(  99)								data199->ffPos = (data199->ffPos + 1);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data200 = data;
HXDLIN(  99)								data200->fPos = (data200->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data201 = data;
HXDLIN(  99)								data201->oPos = (data201->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data202 = data;
HXDLIN(  99)								data202->fPos = (data202->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data203 = data;
HXDLIN(  99)								data203->fPos = (data203->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data204 = data;
HXDLIN(  99)								data204->fPos = (data204->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data205 = data;
HXDLIN(  99)								data205->fPos = (data205->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data206 = data;
HXDLIN(  99)								data206->oPos = (data206->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data207 = data;
HXDLIN(  99)								data207->fPos = (data207->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data208 = data;
HXDLIN(  99)								data208->fPos = (data208->fPos + 5);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data209 = data;
HXDLIN(  99)								data209->oPos = (data209->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data210 = data;
HXDLIN(  99)								data210->oPos = (data210->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data211 = data;
HXDLIN(  99)								data211->oPos = (data211->oPos + 2);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data212 = data;
HXDLIN(  99)								data212->bPos = (data212->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data213 = data;
HXDLIN(  99)								data213->oPos = (data213->oPos + 4);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data214 = data;
HXDLIN(  99)								data214->iiPos = (data214->iiPos + 2);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data215 = data;
HXDLIN(  99)								data215->ffPos = (data215->ffPos + 1);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data216 = data;
HXDLIN(  99)								data216->fPos = (data216->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data217 = data;
HXDLIN(  99)								data217->oPos = (data217->oPos + 4);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data218 = data;
HXDLIN(  99)								data218->iPos = (data218->iPos + 1);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data219 = data;
HXDLIN(  99)								data219->fPos = (data219->fPos + 2);
HXDLIN(  99)								 ::openfl::display::_internal::DrawCommandReader data220 = data;
HXDLIN(  99)								data220->bPos = (data220->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data221 = data;
HXDLIN(  99)								data221->fPos = (data221->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data222 = data;
HXDLIN(  99)								data222->fPos = (data222->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data223 = data;
HXDLIN(  99)								data223->oPos = (data223->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE(  99)								 ::openfl::display::_internal::DrawCommandReader data224 = data;
HXDLIN(  99)								data224->oPos = (data224->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE(  99)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(  99)						 ::openfl::display::_internal::DrawCommandReader c6 = data;
HXLINE( 100)						this->drawCircle(c6->buffer->f->__get(c6->fPos),c6->buffer->f->__get((c6->fPos + 1)),c6->buffer->f->__get((c6->fPos + 2)));
            					}
            					break;
            					case (int)7: {
HXLINE( 102)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data225 = data;
HXDLIN( 102)								data225->oPos = (data225->oPos + 2);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data226 = data;
HXDLIN( 102)								data226->bPos = (data226->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data227 = data;
HXDLIN( 102)								data227->iPos = (data227->iPos + 1);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data228 = data;
HXDLIN( 102)								data228->fPos = (data228->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data229 = data;
HXDLIN( 102)								data229->oPos = (data229->oPos + 4);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data230 = data;
HXDLIN( 102)								data230->iiPos = (data230->iiPos + 2);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data231 = data;
HXDLIN( 102)								data231->ffPos = (data231->ffPos + 1);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data232 = data;
HXDLIN( 102)								data232->fPos = (data232->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data233 = data;
HXDLIN( 102)								data233->oPos = (data233->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data234 = data;
HXDLIN( 102)								data234->fPos = (data234->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data235 = data;
HXDLIN( 102)								data235->fPos = (data235->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data236 = data;
HXDLIN( 102)								data236->fPos = (data236->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data237 = data;
HXDLIN( 102)								data237->fPos = (data237->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data238 = data;
HXDLIN( 102)								data238->oPos = (data238->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data239 = data;
HXDLIN( 102)								data239->fPos = (data239->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data240 = data;
HXDLIN( 102)								data240->fPos = (data240->fPos + 5);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data241 = data;
HXDLIN( 102)								data241->oPos = (data241->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data242 = data;
HXDLIN( 102)								data242->oPos = (data242->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data243 = data;
HXDLIN( 102)								data243->oPos = (data243->oPos + 2);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data244 = data;
HXDLIN( 102)								data244->bPos = (data244->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data245 = data;
HXDLIN( 102)								data245->oPos = (data245->oPos + 4);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data246 = data;
HXDLIN( 102)								data246->iiPos = (data246->iiPos + 2);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data247 = data;
HXDLIN( 102)								data247->ffPos = (data247->ffPos + 1);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data248 = data;
HXDLIN( 102)								data248->fPos = (data248->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data249 = data;
HXDLIN( 102)								data249->oPos = (data249->oPos + 4);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data250 = data;
HXDLIN( 102)								data250->iPos = (data250->iPos + 1);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data251 = data;
HXDLIN( 102)								data251->fPos = (data251->fPos + 2);
HXDLIN( 102)								 ::openfl::display::_internal::DrawCommandReader data252 = data;
HXDLIN( 102)								data252->bPos = (data252->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data253 = data;
HXDLIN( 102)								data253->fPos = (data253->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data254 = data;
HXDLIN( 102)								data254->fPos = (data254->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data255 = data;
HXDLIN( 102)								data255->oPos = (data255->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 102)								 ::openfl::display::_internal::DrawCommandReader data256 = data;
HXDLIN( 102)								data256->oPos = (data256->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 102)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 102)						 ::openfl::display::_internal::DrawCommandReader c7 = data;
HXLINE( 103)						this->drawEllipse(c7->buffer->f->__get(c7->fPos),c7->buffer->f->__get((c7->fPos + 1)),c7->buffer->f->__get((c7->fPos + 2)),c7->buffer->f->__get((c7->fPos + 3)));
            					}
            					break;
            					case (int)8: {
HXLINE( 105)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data257 = data;
HXDLIN( 105)								data257->oPos = (data257->oPos + 2);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data258 = data;
HXDLIN( 105)								data258->bPos = (data258->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data259 = data;
HXDLIN( 105)								data259->iPos = (data259->iPos + 1);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data260 = data;
HXDLIN( 105)								data260->fPos = (data260->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data261 = data;
HXDLIN( 105)								data261->oPos = (data261->oPos + 4);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data262 = data;
HXDLIN( 105)								data262->iiPos = (data262->iiPos + 2);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data263 = data;
HXDLIN( 105)								data263->ffPos = (data263->ffPos + 1);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data264 = data;
HXDLIN( 105)								data264->fPos = (data264->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data265 = data;
HXDLIN( 105)								data265->oPos = (data265->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data266 = data;
HXDLIN( 105)								data266->fPos = (data266->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data267 = data;
HXDLIN( 105)								data267->fPos = (data267->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data268 = data;
HXDLIN( 105)								data268->fPos = (data268->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data269 = data;
HXDLIN( 105)								data269->fPos = (data269->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data270 = data;
HXDLIN( 105)								data270->oPos = (data270->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data271 = data;
HXDLIN( 105)								data271->fPos = (data271->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data272 = data;
HXDLIN( 105)								data272->fPos = (data272->fPos + 5);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data273 = data;
HXDLIN( 105)								data273->oPos = (data273->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data274 = data;
HXDLIN( 105)								data274->oPos = (data274->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data275 = data;
HXDLIN( 105)								data275->oPos = (data275->oPos + 2);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data276 = data;
HXDLIN( 105)								data276->bPos = (data276->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data277 = data;
HXDLIN( 105)								data277->oPos = (data277->oPos + 4);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data278 = data;
HXDLIN( 105)								data278->iiPos = (data278->iiPos + 2);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data279 = data;
HXDLIN( 105)								data279->ffPos = (data279->ffPos + 1);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data280 = data;
HXDLIN( 105)								data280->fPos = (data280->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data281 = data;
HXDLIN( 105)								data281->oPos = (data281->oPos + 4);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data282 = data;
HXDLIN( 105)								data282->iPos = (data282->iPos + 1);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data283 = data;
HXDLIN( 105)								data283->fPos = (data283->fPos + 2);
HXDLIN( 105)								 ::openfl::display::_internal::DrawCommandReader data284 = data;
HXDLIN( 105)								data284->bPos = (data284->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data285 = data;
HXDLIN( 105)								data285->fPos = (data285->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data286 = data;
HXDLIN( 105)								data286->fPos = (data286->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data287 = data;
HXDLIN( 105)								data287->oPos = (data287->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 105)								 ::openfl::display::_internal::DrawCommandReader data288 = data;
HXDLIN( 105)								data288->oPos = (data288->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 105)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN( 105)						 ::openfl::display::_internal::DrawCommandReader c8 = data;
HXLINE( 106)						this->drawQuads(( ( ::openfl::_Vector::FloatVector)(c8->buffer->o->__get(c8->oPos)) ),( ( ::openfl::_Vector::IntVector)(c8->buffer->o->__get((c8->oPos + 1))) ),( ( ::openfl::_Vector::FloatVector)(c8->buffer->o->__get((c8->oPos + 2))) ));
            					}
            					break;
            					case (int)9: {
HXLINE( 108)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data289 = data;
HXDLIN( 108)								data289->oPos = (data289->oPos + 2);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data290 = data;
HXDLIN( 108)								data290->bPos = (data290->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data291 = data;
HXDLIN( 108)								data291->iPos = (data291->iPos + 1);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data292 = data;
HXDLIN( 108)								data292->fPos = (data292->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data293 = data;
HXDLIN( 108)								data293->oPos = (data293->oPos + 4);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data294 = data;
HXDLIN( 108)								data294->iiPos = (data294->iiPos + 2);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data295 = data;
HXDLIN( 108)								data295->ffPos = (data295->ffPos + 1);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data296 = data;
HXDLIN( 108)								data296->fPos = (data296->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data297 = data;
HXDLIN( 108)								data297->oPos = (data297->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data298 = data;
HXDLIN( 108)								data298->fPos = (data298->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data299 = data;
HXDLIN( 108)								data299->fPos = (data299->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data300 = data;
HXDLIN( 108)								data300->fPos = (data300->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data301 = data;
HXDLIN( 108)								data301->fPos = (data301->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data302 = data;
HXDLIN( 108)								data302->oPos = (data302->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data303 = data;
HXDLIN( 108)								data303->fPos = (data303->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data304 = data;
HXDLIN( 108)								data304->fPos = (data304->fPos + 5);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data305 = data;
HXDLIN( 108)								data305->oPos = (data305->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data306 = data;
HXDLIN( 108)								data306->oPos = (data306->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data307 = data;
HXDLIN( 108)								data307->oPos = (data307->oPos + 2);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data308 = data;
HXDLIN( 108)								data308->bPos = (data308->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data309 = data;
HXDLIN( 108)								data309->oPos = (data309->oPos + 4);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data310 = data;
HXDLIN( 108)								data310->iiPos = (data310->iiPos + 2);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data311 = data;
HXDLIN( 108)								data311->ffPos = (data311->ffPos + 1);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data312 = data;
HXDLIN( 108)								data312->fPos = (data312->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data313 = data;
HXDLIN( 108)								data313->oPos = (data313->oPos + 4);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data314 = data;
HXDLIN( 108)								data314->iPos = (data314->iPos + 1);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data315 = data;
HXDLIN( 108)								data315->fPos = (data315->fPos + 2);
HXDLIN( 108)								 ::openfl::display::_internal::DrawCommandReader data316 = data;
HXDLIN( 108)								data316->bPos = (data316->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data317 = data;
HXDLIN( 108)								data317->fPos = (data317->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data318 = data;
HXDLIN( 108)								data318->fPos = (data318->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data319 = data;
HXDLIN( 108)								data319->oPos = (data319->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 108)								 ::openfl::display::_internal::DrawCommandReader data320 = data;
HXDLIN( 108)								data320->oPos = (data320->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 108)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 108)						 ::openfl::display::_internal::DrawCommandReader c9 = data;
HXLINE( 109)						this->drawRect(c9->buffer->f->__get(c9->fPos),c9->buffer->f->__get((c9->fPos + 1)),c9->buffer->f->__get((c9->fPos + 2)),c9->buffer->f->__get((c9->fPos + 3)));
            					}
            					break;
            					case (int)10: {
HXLINE( 111)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data321 = data;
HXDLIN( 111)								data321->oPos = (data321->oPos + 2);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data322 = data;
HXDLIN( 111)								data322->bPos = (data322->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data323 = data;
HXDLIN( 111)								data323->iPos = (data323->iPos + 1);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data324 = data;
HXDLIN( 111)								data324->fPos = (data324->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data325 = data;
HXDLIN( 111)								data325->oPos = (data325->oPos + 4);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data326 = data;
HXDLIN( 111)								data326->iiPos = (data326->iiPos + 2);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data327 = data;
HXDLIN( 111)								data327->ffPos = (data327->ffPos + 1);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data328 = data;
HXDLIN( 111)								data328->fPos = (data328->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data329 = data;
HXDLIN( 111)								data329->oPos = (data329->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data330 = data;
HXDLIN( 111)								data330->fPos = (data330->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data331 = data;
HXDLIN( 111)								data331->fPos = (data331->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data332 = data;
HXDLIN( 111)								data332->fPos = (data332->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data333 = data;
HXDLIN( 111)								data333->fPos = (data333->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data334 = data;
HXDLIN( 111)								data334->oPos = (data334->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data335 = data;
HXDLIN( 111)								data335->fPos = (data335->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data336 = data;
HXDLIN( 111)								data336->fPos = (data336->fPos + 5);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data337 = data;
HXDLIN( 111)								data337->oPos = (data337->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data338 = data;
HXDLIN( 111)								data338->oPos = (data338->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data339 = data;
HXDLIN( 111)								data339->oPos = (data339->oPos + 2);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data340 = data;
HXDLIN( 111)								data340->bPos = (data340->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data341 = data;
HXDLIN( 111)								data341->oPos = (data341->oPos + 4);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data342 = data;
HXDLIN( 111)								data342->iiPos = (data342->iiPos + 2);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data343 = data;
HXDLIN( 111)								data343->ffPos = (data343->ffPos + 1);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data344 = data;
HXDLIN( 111)								data344->fPos = (data344->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data345 = data;
HXDLIN( 111)								data345->oPos = (data345->oPos + 4);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data346 = data;
HXDLIN( 111)								data346->iPos = (data346->iPos + 1);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data347 = data;
HXDLIN( 111)								data347->fPos = (data347->fPos + 2);
HXDLIN( 111)								 ::openfl::display::_internal::DrawCommandReader data348 = data;
HXDLIN( 111)								data348->bPos = (data348->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data349 = data;
HXDLIN( 111)								data349->fPos = (data349->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data350 = data;
HXDLIN( 111)								data350->fPos = (data350->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data351 = data;
HXDLIN( 111)								data351->oPos = (data351->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 111)								 ::openfl::display::_internal::DrawCommandReader data352 = data;
HXDLIN( 111)								data352->oPos = (data352->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 111)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 111)						 ::openfl::display::_internal::DrawCommandReader c10 = data;
HXLINE( 112)						this->drawRoundRect(c10->buffer->f->__get(c10->fPos),c10->buffer->f->__get((c10->fPos + 1)),c10->buffer->f->__get((c10->fPos + 2)),c10->buffer->f->__get((c10->fPos + 3)),c10->buffer->f->__get((c10->fPos + 4)),c10->buffer->o->__get(c10->oPos));
            					}
            					break;
            					case (int)12: {
HXLINE( 114)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data353 = data;
HXDLIN( 114)								data353->oPos = (data353->oPos + 2);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data354 = data;
HXDLIN( 114)								data354->bPos = (data354->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data355 = data;
HXDLIN( 114)								data355->iPos = (data355->iPos + 1);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data356 = data;
HXDLIN( 114)								data356->fPos = (data356->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data357 = data;
HXDLIN( 114)								data357->oPos = (data357->oPos + 4);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data358 = data;
HXDLIN( 114)								data358->iiPos = (data358->iiPos + 2);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data359 = data;
HXDLIN( 114)								data359->ffPos = (data359->ffPos + 1);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data360 = data;
HXDLIN( 114)								data360->fPos = (data360->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data361 = data;
HXDLIN( 114)								data361->oPos = (data361->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data362 = data;
HXDLIN( 114)								data362->fPos = (data362->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data363 = data;
HXDLIN( 114)								data363->fPos = (data363->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data364 = data;
HXDLIN( 114)								data364->fPos = (data364->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data365 = data;
HXDLIN( 114)								data365->fPos = (data365->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data366 = data;
HXDLIN( 114)								data366->oPos = (data366->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data367 = data;
HXDLIN( 114)								data367->fPos = (data367->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data368 = data;
HXDLIN( 114)								data368->fPos = (data368->fPos + 5);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data369 = data;
HXDLIN( 114)								data369->oPos = (data369->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data370 = data;
HXDLIN( 114)								data370->oPos = (data370->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data371 = data;
HXDLIN( 114)								data371->oPos = (data371->oPos + 2);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data372 = data;
HXDLIN( 114)								data372->bPos = (data372->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data373 = data;
HXDLIN( 114)								data373->oPos = (data373->oPos + 4);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data374 = data;
HXDLIN( 114)								data374->iiPos = (data374->iiPos + 2);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data375 = data;
HXDLIN( 114)								data375->ffPos = (data375->ffPos + 1);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data376 = data;
HXDLIN( 114)								data376->fPos = (data376->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data377 = data;
HXDLIN( 114)								data377->oPos = (data377->oPos + 4);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data378 = data;
HXDLIN( 114)								data378->iPos = (data378->iPos + 1);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data379 = data;
HXDLIN( 114)								data379->fPos = (data379->fPos + 2);
HXDLIN( 114)								 ::openfl::display::_internal::DrawCommandReader data380 = data;
HXDLIN( 114)								data380->bPos = (data380->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data381 = data;
HXDLIN( 114)								data381->fPos = (data381->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data382 = data;
HXDLIN( 114)								data382->fPos = (data382->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data383 = data;
HXDLIN( 114)								data383->oPos = (data383->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 114)								 ::openfl::display::_internal::DrawCommandReader data384 = data;
HXDLIN( 114)								data384->oPos = (data384->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 114)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN( 114)						 ::openfl::display::_internal::DrawCommandReader c11 = data;
HXLINE( 115)						this->drawTriangles(( ( ::openfl::_Vector::FloatVector)(c11->buffer->o->__get(c11->oPos)) ),( ( ::openfl::_Vector::IntVector)(c11->buffer->o->__get((c11->oPos + 1))) ),( ( ::openfl::_Vector::FloatVector)(c11->buffer->o->__get((c11->oPos + 2))) ),c11->buffer->o->__get((c11->oPos + 3)));
            					}
            					break;
            					case (int)13: {
HXLINE( 117)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data385 = data;
HXDLIN( 117)								data385->oPos = (data385->oPos + 2);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data386 = data;
HXDLIN( 117)								data386->bPos = (data386->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data387 = data;
HXDLIN( 117)								data387->iPos = (data387->iPos + 1);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data388 = data;
HXDLIN( 117)								data388->fPos = (data388->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data389 = data;
HXDLIN( 117)								data389->oPos = (data389->oPos + 4);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data390 = data;
HXDLIN( 117)								data390->iiPos = (data390->iiPos + 2);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data391 = data;
HXDLIN( 117)								data391->ffPos = (data391->ffPos + 1);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data392 = data;
HXDLIN( 117)								data392->fPos = (data392->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data393 = data;
HXDLIN( 117)								data393->oPos = (data393->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data394 = data;
HXDLIN( 117)								data394->fPos = (data394->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data395 = data;
HXDLIN( 117)								data395->fPos = (data395->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data396 = data;
HXDLIN( 117)								data396->fPos = (data396->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data397 = data;
HXDLIN( 117)								data397->fPos = (data397->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data398 = data;
HXDLIN( 117)								data398->oPos = (data398->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data399 = data;
HXDLIN( 117)								data399->fPos = (data399->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data400 = data;
HXDLIN( 117)								data400->fPos = (data400->fPos + 5);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data401 = data;
HXDLIN( 117)								data401->oPos = (data401->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data402 = data;
HXDLIN( 117)								data402->oPos = (data402->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data403 = data;
HXDLIN( 117)								data403->oPos = (data403->oPos + 2);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data404 = data;
HXDLIN( 117)								data404->bPos = (data404->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data405 = data;
HXDLIN( 117)								data405->oPos = (data405->oPos + 4);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data406 = data;
HXDLIN( 117)								data406->iiPos = (data406->iiPos + 2);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data407 = data;
HXDLIN( 117)								data407->ffPos = (data407->ffPos + 1);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data408 = data;
HXDLIN( 117)								data408->fPos = (data408->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data409 = data;
HXDLIN( 117)								data409->oPos = (data409->oPos + 4);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data410 = data;
HXDLIN( 117)								data410->iPos = (data410->iPos + 1);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data411 = data;
HXDLIN( 117)								data411->fPos = (data411->fPos + 2);
HXDLIN( 117)								 ::openfl::display::_internal::DrawCommandReader data412 = data;
HXDLIN( 117)								data412->bPos = (data412->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data413 = data;
HXDLIN( 117)								data413->fPos = (data413->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data414 = data;
HXDLIN( 117)								data414->fPos = (data414->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data415 = data;
HXDLIN( 117)								data415->oPos = (data415->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 117)								 ::openfl::display::_internal::DrawCommandReader data416 = data;
HXDLIN( 117)								data416->oPos = (data416->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 117)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::END_FILL_dyn();
HXDLIN( 117)						 ::openfl::display::_internal::DrawCommandReader c12 = data;
HXLINE( 118)						this->endFill();
            					}
            					break;
            					case (int)14: {
HXLINE( 120)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data417 = data;
HXDLIN( 120)								data417->oPos = (data417->oPos + 2);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data418 = data;
HXDLIN( 120)								data418->bPos = (data418->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data419 = data;
HXDLIN( 120)								data419->iPos = (data419->iPos + 1);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data420 = data;
HXDLIN( 120)								data420->fPos = (data420->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data421 = data;
HXDLIN( 120)								data421->oPos = (data421->oPos + 4);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data422 = data;
HXDLIN( 120)								data422->iiPos = (data422->iiPos + 2);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data423 = data;
HXDLIN( 120)								data423->ffPos = (data423->ffPos + 1);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data424 = data;
HXDLIN( 120)								data424->fPos = (data424->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data425 = data;
HXDLIN( 120)								data425->oPos = (data425->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data426 = data;
HXDLIN( 120)								data426->fPos = (data426->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data427 = data;
HXDLIN( 120)								data427->fPos = (data427->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data428 = data;
HXDLIN( 120)								data428->fPos = (data428->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data429 = data;
HXDLIN( 120)								data429->fPos = (data429->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data430 = data;
HXDLIN( 120)								data430->oPos = (data430->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data431 = data;
HXDLIN( 120)								data431->fPos = (data431->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data432 = data;
HXDLIN( 120)								data432->fPos = (data432->fPos + 5);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data433 = data;
HXDLIN( 120)								data433->oPos = (data433->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data434 = data;
HXDLIN( 120)								data434->oPos = (data434->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data435 = data;
HXDLIN( 120)								data435->oPos = (data435->oPos + 2);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data436 = data;
HXDLIN( 120)								data436->bPos = (data436->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data437 = data;
HXDLIN( 120)								data437->oPos = (data437->oPos + 4);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data438 = data;
HXDLIN( 120)								data438->iiPos = (data438->iiPos + 2);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data439 = data;
HXDLIN( 120)								data439->ffPos = (data439->ffPos + 1);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data440 = data;
HXDLIN( 120)								data440->fPos = (data440->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data441 = data;
HXDLIN( 120)								data441->oPos = (data441->oPos + 4);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data442 = data;
HXDLIN( 120)								data442->iPos = (data442->iPos + 1);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data443 = data;
HXDLIN( 120)								data443->fPos = (data443->fPos + 2);
HXDLIN( 120)								 ::openfl::display::_internal::DrawCommandReader data444 = data;
HXDLIN( 120)								data444->bPos = (data444->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data445 = data;
HXDLIN( 120)								data445->fPos = (data445->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data446 = data;
HXDLIN( 120)								data446->fPos = (data446->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data447 = data;
HXDLIN( 120)								data447->oPos = (data447->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 120)								 ::openfl::display::_internal::DrawCommandReader data448 = data;
HXDLIN( 120)								data448->oPos = (data448->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 120)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 120)						 ::openfl::display::_internal::DrawCommandReader c13 = data;
HXLINE( 121)						this->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c13->buffer->o->__get(c13->oPos)) ),( ( ::openfl::geom::Matrix)(c13->buffer->o->__get((c13->oPos + 1))) ),c13->buffer->b->__get(c13->bPos),c13->buffer->b->__get((c13->bPos + 1)));
            					}
            					break;
            					case (int)15: {
HXLINE( 123)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data449 = data;
HXDLIN( 123)								data449->oPos = (data449->oPos + 2);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data450 = data;
HXDLIN( 123)								data450->bPos = (data450->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data451 = data;
HXDLIN( 123)								data451->iPos = (data451->iPos + 1);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data452 = data;
HXDLIN( 123)								data452->fPos = (data452->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data453 = data;
HXDLIN( 123)								data453->oPos = (data453->oPos + 4);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data454 = data;
HXDLIN( 123)								data454->iiPos = (data454->iiPos + 2);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data455 = data;
HXDLIN( 123)								data455->ffPos = (data455->ffPos + 1);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data456 = data;
HXDLIN( 123)								data456->fPos = (data456->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data457 = data;
HXDLIN( 123)								data457->oPos = (data457->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data458 = data;
HXDLIN( 123)								data458->fPos = (data458->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data459 = data;
HXDLIN( 123)								data459->fPos = (data459->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data460 = data;
HXDLIN( 123)								data460->fPos = (data460->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data461 = data;
HXDLIN( 123)								data461->fPos = (data461->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data462 = data;
HXDLIN( 123)								data462->oPos = (data462->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data463 = data;
HXDLIN( 123)								data463->fPos = (data463->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data464 = data;
HXDLIN( 123)								data464->fPos = (data464->fPos + 5);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data465 = data;
HXDLIN( 123)								data465->oPos = (data465->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data466 = data;
HXDLIN( 123)								data466->oPos = (data466->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data467 = data;
HXDLIN( 123)								data467->oPos = (data467->oPos + 2);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data468 = data;
HXDLIN( 123)								data468->bPos = (data468->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data469 = data;
HXDLIN( 123)								data469->oPos = (data469->oPos + 4);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data470 = data;
HXDLIN( 123)								data470->iiPos = (data470->iiPos + 2);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data471 = data;
HXDLIN( 123)								data471->ffPos = (data471->ffPos + 1);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data472 = data;
HXDLIN( 123)								data472->fPos = (data472->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data473 = data;
HXDLIN( 123)								data473->oPos = (data473->oPos + 4);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data474 = data;
HXDLIN( 123)								data474->iPos = (data474->iPos + 1);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data475 = data;
HXDLIN( 123)								data475->fPos = (data475->fPos + 2);
HXDLIN( 123)								 ::openfl::display::_internal::DrawCommandReader data476 = data;
HXDLIN( 123)								data476->bPos = (data476->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data477 = data;
HXDLIN( 123)								data477->fPos = (data477->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data478 = data;
HXDLIN( 123)								data478->fPos = (data478->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data479 = data;
HXDLIN( 123)								data479->oPos = (data479->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 123)								 ::openfl::display::_internal::DrawCommandReader data480 = data;
HXDLIN( 123)								data480->oPos = (data480->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 123)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 123)						 ::openfl::display::_internal::DrawCommandReader c14 = data;
HXLINE( 124)						this->lineGradientStyle(c14->buffer->o->__get(c14->oPos),c14->buffer->ii->__get(c14->iiPos).StaticCast< ::Array< int > >(),c14->buffer->ff->__get(c14->ffPos).StaticCast< ::Array< Float > >(),c14->buffer->ii->__get((c14->iiPos + 1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c14->buffer->o->__get((c14->oPos + 1))) ),c14->buffer->o->__get((c14->oPos + 2)),c14->buffer->o->__get((c14->oPos + 3)),c14->buffer->f->__get(c14->fPos));
            					}
            					break;
            					case (int)16: {
HXLINE( 126)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data481 = data;
HXDLIN( 126)								data481->oPos = (data481->oPos + 2);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data482 = data;
HXDLIN( 126)								data482->bPos = (data482->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data483 = data;
HXDLIN( 126)								data483->iPos = (data483->iPos + 1);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data484 = data;
HXDLIN( 126)								data484->fPos = (data484->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data485 = data;
HXDLIN( 126)								data485->oPos = (data485->oPos + 4);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data486 = data;
HXDLIN( 126)								data486->iiPos = (data486->iiPos + 2);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data487 = data;
HXDLIN( 126)								data487->ffPos = (data487->ffPos + 1);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data488 = data;
HXDLIN( 126)								data488->fPos = (data488->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data489 = data;
HXDLIN( 126)								data489->oPos = (data489->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data490 = data;
HXDLIN( 126)								data490->fPos = (data490->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data491 = data;
HXDLIN( 126)								data491->fPos = (data491->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data492 = data;
HXDLIN( 126)								data492->fPos = (data492->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data493 = data;
HXDLIN( 126)								data493->fPos = (data493->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data494 = data;
HXDLIN( 126)								data494->oPos = (data494->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data495 = data;
HXDLIN( 126)								data495->fPos = (data495->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data496 = data;
HXDLIN( 126)								data496->fPos = (data496->fPos + 5);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data497 = data;
HXDLIN( 126)								data497->oPos = (data497->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data498 = data;
HXDLIN( 126)								data498->oPos = (data498->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data499 = data;
HXDLIN( 126)								data499->oPos = (data499->oPos + 2);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data500 = data;
HXDLIN( 126)								data500->bPos = (data500->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data501 = data;
HXDLIN( 126)								data501->oPos = (data501->oPos + 4);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data502 = data;
HXDLIN( 126)								data502->iiPos = (data502->iiPos + 2);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data503 = data;
HXDLIN( 126)								data503->ffPos = (data503->ffPos + 1);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data504 = data;
HXDLIN( 126)								data504->fPos = (data504->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data505 = data;
HXDLIN( 126)								data505->oPos = (data505->oPos + 4);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data506 = data;
HXDLIN( 126)								data506->iPos = (data506->iPos + 1);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data507 = data;
HXDLIN( 126)								data507->fPos = (data507->fPos + 2);
HXDLIN( 126)								 ::openfl::display::_internal::DrawCommandReader data508 = data;
HXDLIN( 126)								data508->bPos = (data508->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data509 = data;
HXDLIN( 126)								data509->fPos = (data509->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data510 = data;
HXDLIN( 126)								data510->fPos = (data510->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data511 = data;
HXDLIN( 126)								data511->oPos = (data511->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 126)								 ::openfl::display::_internal::DrawCommandReader data512 = data;
HXDLIN( 126)								data512->oPos = (data512->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 126)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 126)						 ::openfl::display::_internal::DrawCommandReader c15 = data;
HXLINE( 127)						this->lineStyle(c15->buffer->o->__get(c15->oPos),c15->buffer->i->__get(c15->iPos),c15->buffer->f->__get(c15->fPos),c15->buffer->b->__get(c15->bPos),c15->buffer->o->__get((c15->oPos + 1)),c15->buffer->o->__get((c15->oPos + 2)),c15->buffer->o->__get((c15->oPos + 3)),c15->buffer->f->__get((c15->fPos + 1)));
            					}
            					break;
            					case (int)17: {
HXLINE( 129)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data513 = data;
HXDLIN( 129)								data513->oPos = (data513->oPos + 2);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data514 = data;
HXDLIN( 129)								data514->bPos = (data514->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data515 = data;
HXDLIN( 129)								data515->iPos = (data515->iPos + 1);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data516 = data;
HXDLIN( 129)								data516->fPos = (data516->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data517 = data;
HXDLIN( 129)								data517->oPos = (data517->oPos + 4);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data518 = data;
HXDLIN( 129)								data518->iiPos = (data518->iiPos + 2);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data519 = data;
HXDLIN( 129)								data519->ffPos = (data519->ffPos + 1);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data520 = data;
HXDLIN( 129)								data520->fPos = (data520->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data521 = data;
HXDLIN( 129)								data521->oPos = (data521->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data522 = data;
HXDLIN( 129)								data522->fPos = (data522->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data523 = data;
HXDLIN( 129)								data523->fPos = (data523->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data524 = data;
HXDLIN( 129)								data524->fPos = (data524->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data525 = data;
HXDLIN( 129)								data525->fPos = (data525->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data526 = data;
HXDLIN( 129)								data526->oPos = (data526->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data527 = data;
HXDLIN( 129)								data527->fPos = (data527->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data528 = data;
HXDLIN( 129)								data528->fPos = (data528->fPos + 5);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data529 = data;
HXDLIN( 129)								data529->oPos = (data529->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data530 = data;
HXDLIN( 129)								data530->oPos = (data530->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data531 = data;
HXDLIN( 129)								data531->oPos = (data531->oPos + 2);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data532 = data;
HXDLIN( 129)								data532->bPos = (data532->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data533 = data;
HXDLIN( 129)								data533->oPos = (data533->oPos + 4);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data534 = data;
HXDLIN( 129)								data534->iiPos = (data534->iiPos + 2);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data535 = data;
HXDLIN( 129)								data535->ffPos = (data535->ffPos + 1);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data536 = data;
HXDLIN( 129)								data536->fPos = (data536->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data537 = data;
HXDLIN( 129)								data537->oPos = (data537->oPos + 4);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data538 = data;
HXDLIN( 129)								data538->iPos = (data538->iPos + 1);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data539 = data;
HXDLIN( 129)								data539->fPos = (data539->fPos + 2);
HXDLIN( 129)								 ::openfl::display::_internal::DrawCommandReader data540 = data;
HXDLIN( 129)								data540->bPos = (data540->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data541 = data;
HXDLIN( 129)								data541->fPos = (data541->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data542 = data;
HXDLIN( 129)								data542->fPos = (data542->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data543 = data;
HXDLIN( 129)								data543->oPos = (data543->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 129)								 ::openfl::display::_internal::DrawCommandReader data544 = data;
HXDLIN( 129)								data544->oPos = (data544->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 129)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 129)						 ::openfl::display::_internal::DrawCommandReader c16 = data;
HXLINE( 130)						this->lineTo(c16->buffer->f->__get(c16->fPos),c16->buffer->f->__get((c16->fPos + 1)));
            					}
            					break;
            					case (int)18: {
HXLINE( 132)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data545 = data;
HXDLIN( 132)								data545->oPos = (data545->oPos + 2);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data546 = data;
HXDLIN( 132)								data546->bPos = (data546->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data547 = data;
HXDLIN( 132)								data547->iPos = (data547->iPos + 1);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data548 = data;
HXDLIN( 132)								data548->fPos = (data548->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data549 = data;
HXDLIN( 132)								data549->oPos = (data549->oPos + 4);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data550 = data;
HXDLIN( 132)								data550->iiPos = (data550->iiPos + 2);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data551 = data;
HXDLIN( 132)								data551->ffPos = (data551->ffPos + 1);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data552 = data;
HXDLIN( 132)								data552->fPos = (data552->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data553 = data;
HXDLIN( 132)								data553->oPos = (data553->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data554 = data;
HXDLIN( 132)								data554->fPos = (data554->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data555 = data;
HXDLIN( 132)								data555->fPos = (data555->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data556 = data;
HXDLIN( 132)								data556->fPos = (data556->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data557 = data;
HXDLIN( 132)								data557->fPos = (data557->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data558 = data;
HXDLIN( 132)								data558->oPos = (data558->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data559 = data;
HXDLIN( 132)								data559->fPos = (data559->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data560 = data;
HXDLIN( 132)								data560->fPos = (data560->fPos + 5);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data561 = data;
HXDLIN( 132)								data561->oPos = (data561->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data562 = data;
HXDLIN( 132)								data562->oPos = (data562->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data563 = data;
HXDLIN( 132)								data563->oPos = (data563->oPos + 2);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data564 = data;
HXDLIN( 132)								data564->bPos = (data564->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data565 = data;
HXDLIN( 132)								data565->oPos = (data565->oPos + 4);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data566 = data;
HXDLIN( 132)								data566->iiPos = (data566->iiPos + 2);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data567 = data;
HXDLIN( 132)								data567->ffPos = (data567->ffPos + 1);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data568 = data;
HXDLIN( 132)								data568->fPos = (data568->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data569 = data;
HXDLIN( 132)								data569->oPos = (data569->oPos + 4);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data570 = data;
HXDLIN( 132)								data570->iPos = (data570->iPos + 1);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data571 = data;
HXDLIN( 132)								data571->fPos = (data571->fPos + 2);
HXDLIN( 132)								 ::openfl::display::_internal::DrawCommandReader data572 = data;
HXDLIN( 132)								data572->bPos = (data572->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data573 = data;
HXDLIN( 132)								data573->fPos = (data573->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data574 = data;
HXDLIN( 132)								data574->fPos = (data574->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data575 = data;
HXDLIN( 132)								data575->oPos = (data575->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 132)								 ::openfl::display::_internal::DrawCommandReader data576 = data;
HXDLIN( 132)								data576->oPos = (data576->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 132)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 132)						 ::openfl::display::_internal::DrawCommandReader c17 = data;
HXLINE( 133)						this->moveTo(c17->buffer->f->__get(c17->fPos),c17->buffer->f->__get((c17->fPos + 1)));
            					}
            					break;
            					case (int)20: {
HXLINE( 135)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data577 = data;
HXDLIN( 135)								data577->oPos = (data577->oPos + 2);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data578 = data;
HXDLIN( 135)								data578->bPos = (data578->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data579 = data;
HXDLIN( 135)								data579->iPos = (data579->iPos + 1);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data580 = data;
HXDLIN( 135)								data580->fPos = (data580->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data581 = data;
HXDLIN( 135)								data581->oPos = (data581->oPos + 4);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data582 = data;
HXDLIN( 135)								data582->iiPos = (data582->iiPos + 2);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data583 = data;
HXDLIN( 135)								data583->ffPos = (data583->ffPos + 1);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data584 = data;
HXDLIN( 135)								data584->fPos = (data584->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data585 = data;
HXDLIN( 135)								data585->oPos = (data585->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data586 = data;
HXDLIN( 135)								data586->fPos = (data586->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data587 = data;
HXDLIN( 135)								data587->fPos = (data587->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data588 = data;
HXDLIN( 135)								data588->fPos = (data588->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data589 = data;
HXDLIN( 135)								data589->fPos = (data589->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data590 = data;
HXDLIN( 135)								data590->oPos = (data590->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data591 = data;
HXDLIN( 135)								data591->fPos = (data591->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data592 = data;
HXDLIN( 135)								data592->fPos = (data592->fPos + 5);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data593 = data;
HXDLIN( 135)								data593->oPos = (data593->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data594 = data;
HXDLIN( 135)								data594->oPos = (data594->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data595 = data;
HXDLIN( 135)								data595->oPos = (data595->oPos + 2);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data596 = data;
HXDLIN( 135)								data596->bPos = (data596->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data597 = data;
HXDLIN( 135)								data597->oPos = (data597->oPos + 4);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data598 = data;
HXDLIN( 135)								data598->iiPos = (data598->iiPos + 2);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data599 = data;
HXDLIN( 135)								data599->ffPos = (data599->ffPos + 1);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data600 = data;
HXDLIN( 135)								data600->fPos = (data600->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data601 = data;
HXDLIN( 135)								data601->oPos = (data601->oPos + 4);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data602 = data;
HXDLIN( 135)								data602->iPos = (data602->iPos + 1);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data603 = data;
HXDLIN( 135)								data603->fPos = (data603->fPos + 2);
HXDLIN( 135)								 ::openfl::display::_internal::DrawCommandReader data604 = data;
HXDLIN( 135)								data604->bPos = (data604->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data605 = data;
HXDLIN( 135)								data605->fPos = (data605->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data606 = data;
HXDLIN( 135)								data606->fPos = (data606->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data607 = data;
HXDLIN( 135)								data607->oPos = (data607->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 135)								 ::openfl::display::_internal::DrawCommandReader data608 = data;
HXDLIN( 135)								data608->oPos = (data608->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 135)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::OVERRIDE_MATRIX_dyn();
HXDLIN( 135)						 ::openfl::display::_internal::DrawCommandReader c18 = data;
HXLINE( 136)						this->overrideMatrix(( ( ::openfl::geom::Matrix)(c18->buffer->o->__get(c18->oPos)) ));
            					}
            					break;
            					case (int)21: {
HXLINE( 138)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data609 = data;
HXDLIN( 138)								data609->oPos = (data609->oPos + 2);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data610 = data;
HXDLIN( 138)								data610->bPos = (data610->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data611 = data;
HXDLIN( 138)								data611->iPos = (data611->iPos + 1);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data612 = data;
HXDLIN( 138)								data612->fPos = (data612->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data613 = data;
HXDLIN( 138)								data613->oPos = (data613->oPos + 4);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data614 = data;
HXDLIN( 138)								data614->iiPos = (data614->iiPos + 2);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data615 = data;
HXDLIN( 138)								data615->ffPos = (data615->ffPos + 1);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data616 = data;
HXDLIN( 138)								data616->fPos = (data616->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data617 = data;
HXDLIN( 138)								data617->oPos = (data617->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data618 = data;
HXDLIN( 138)								data618->fPos = (data618->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data619 = data;
HXDLIN( 138)								data619->fPos = (data619->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data620 = data;
HXDLIN( 138)								data620->fPos = (data620->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data621 = data;
HXDLIN( 138)								data621->fPos = (data621->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data622 = data;
HXDLIN( 138)								data622->oPos = (data622->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data623 = data;
HXDLIN( 138)								data623->fPos = (data623->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data624 = data;
HXDLIN( 138)								data624->fPos = (data624->fPos + 5);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data625 = data;
HXDLIN( 138)								data625->oPos = (data625->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data626 = data;
HXDLIN( 138)								data626->oPos = (data626->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data627 = data;
HXDLIN( 138)								data627->oPos = (data627->oPos + 2);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data628 = data;
HXDLIN( 138)								data628->bPos = (data628->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data629 = data;
HXDLIN( 138)								data629->oPos = (data629->oPos + 4);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data630 = data;
HXDLIN( 138)								data630->iiPos = (data630->iiPos + 2);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data631 = data;
HXDLIN( 138)								data631->ffPos = (data631->ffPos + 1);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data632 = data;
HXDLIN( 138)								data632->fPos = (data632->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data633 = data;
HXDLIN( 138)								data633->oPos = (data633->oPos + 4);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data634 = data;
HXDLIN( 138)								data634->iPos = (data634->iPos + 1);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data635 = data;
HXDLIN( 138)								data635->fPos = (data635->fPos + 2);
HXDLIN( 138)								 ::openfl::display::_internal::DrawCommandReader data636 = data;
HXDLIN( 138)								data636->bPos = (data636->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data637 = data;
HXDLIN( 138)								data637->fPos = (data637->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data638 = data;
HXDLIN( 138)								data638->fPos = (data638->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data639 = data;
HXDLIN( 138)								data639->oPos = (data639->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 138)								 ::openfl::display::_internal::DrawCommandReader data640 = data;
HXDLIN( 138)								data640->oPos = (data640->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 138)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN( 138)						 ::openfl::display::_internal::DrawCommandReader c19 = data;
HXLINE( 139)						this->windingEvenOdd();
            					}
            					break;
            					case (int)22: {
HXLINE( 141)						switch((int)(data->prev->_hx_getIndex())){
            							case (int)0: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data641 = data;
HXDLIN( 141)								data641->oPos = (data641->oPos + 2);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data642 = data;
HXDLIN( 141)								data642->bPos = (data642->bPos + 2);
            							}
            							break;
            							case (int)1: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data643 = data;
HXDLIN( 141)								data643->iPos = (data643->iPos + 1);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data644 = data;
HXDLIN( 141)								data644->fPos = (data644->fPos + 1);
            							}
            							break;
            							case (int)2: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data645 = data;
HXDLIN( 141)								data645->oPos = (data645->oPos + 4);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data646 = data;
HXDLIN( 141)								data646->iiPos = (data646->iiPos + 2);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data647 = data;
HXDLIN( 141)								data647->ffPos = (data647->ffPos + 1);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data648 = data;
HXDLIN( 141)								data648->fPos = (data648->fPos + 1);
            							}
            							break;
            							case (int)3: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data649 = data;
HXDLIN( 141)								data649->oPos = (data649->oPos + 1);
            							}
            							break;
            							case (int)4: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data650 = data;
HXDLIN( 141)								data650->fPos = (data650->fPos + 6);
            							}
            							break;
            							case (int)5: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data651 = data;
HXDLIN( 141)								data651->fPos = (data651->fPos + 4);
            							}
            							break;
            							case (int)6: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data652 = data;
HXDLIN( 141)								data652->fPos = (data652->fPos + 3);
            							}
            							break;
            							case (int)7: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data653 = data;
HXDLIN( 141)								data653->fPos = (data653->fPos + 4);
            							}
            							break;
            							case (int)8: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data654 = data;
HXDLIN( 141)								data654->oPos = (data654->oPos + 3);
            							}
            							break;
            							case (int)9: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data655 = data;
HXDLIN( 141)								data655->fPos = (data655->fPos + 4);
            							}
            							break;
            							case (int)10: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data656 = data;
HXDLIN( 141)								data656->fPos = (data656->fPos + 5);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data657 = data;
HXDLIN( 141)								data657->oPos = (data657->oPos + 1);
            							}
            							break;
            							case (int)12: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data658 = data;
HXDLIN( 141)								data658->oPos = (data658->oPos + 4);
            							}
            							break;
            							case (int)13: {
            							}
            							break;
            							case (int)14: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data659 = data;
HXDLIN( 141)								data659->oPos = (data659->oPos + 2);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data660 = data;
HXDLIN( 141)								data660->bPos = (data660->bPos + 2);
            							}
            							break;
            							case (int)15: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data661 = data;
HXDLIN( 141)								data661->oPos = (data661->oPos + 4);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data662 = data;
HXDLIN( 141)								data662->iiPos = (data662->iiPos + 2);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data663 = data;
HXDLIN( 141)								data663->ffPos = (data663->ffPos + 1);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data664 = data;
HXDLIN( 141)								data664->fPos = (data664->fPos + 1);
            							}
            							break;
            							case (int)16: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data665 = data;
HXDLIN( 141)								data665->oPos = (data665->oPos + 4);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data666 = data;
HXDLIN( 141)								data666->iPos = (data666->iPos + 1);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data667 = data;
HXDLIN( 141)								data667->fPos = (data667->fPos + 2);
HXDLIN( 141)								 ::openfl::display::_internal::DrawCommandReader data668 = data;
HXDLIN( 141)								data668->bPos = (data668->bPos + 1);
            							}
            							break;
            							case (int)17: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data669 = data;
HXDLIN( 141)								data669->fPos = (data669->fPos + 2);
            							}
            							break;
            							case (int)18: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data670 = data;
HXDLIN( 141)								data670->fPos = (data670->fPos + 2);
            							}
            							break;
            							case (int)19: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data671 = data;
HXDLIN( 141)								data671->oPos = (data671->oPos + 1);
            							}
            							break;
            							case (int)20: {
HXLINE( 141)								 ::openfl::display::_internal::DrawCommandReader data672 = data;
HXDLIN( 141)								data672->oPos = (data672->oPos + 1);
            							}
            							break;
            							case (int)21: case (int)22: {
            							}
            							break;
            							default:{
            							}
            						}
HXLINE( 141)						data->prev = ::openfl::display::_internal::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN( 141)						 ::openfl::display::_internal::DrawCommandReader c20 = data;
HXLINE( 142)						this->windingNonZero();
            					}
            					break;
            					default:{
            					}
            				}
            			}
            		}
HXLINE( 147)		data->destroy();
HXLINE( 148)		return other;
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,append,return )

void DrawCommandBuffer_obj::beginBitmapFill( ::openfl::display::BitmapData bitmap, ::openfl::geom::Matrix matrix,bool repeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_152_beginBitmapFill)
HXLINE( 153)		this->prepareWrite();
HXLINE( 155)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn());
HXLINE( 156)		this->o->push(bitmap);
HXLINE( 157)		this->o->push(matrix);
HXLINE( 158)		this->b->push(repeat);
HXLINE( 159)		this->b->push(smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,beginBitmapFill,(void))

void DrawCommandBuffer_obj::beginFill(int color,Float alpha){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_163_beginFill)
HXLINE( 164)		this->prepareWrite();
HXLINE( 166)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::BEGIN_FILL_dyn());
HXLINE( 167)		this->i->push(color);
HXLINE( 168)		this->f->push(alpha);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,beginFill,(void))

void DrawCommandBuffer_obj::beginGradientFill( ::Dynamic type,::Array< int > colors,::Array< Float > alphas,::Array< int > ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_173_beginGradientFill)
HXLINE( 174)		this->prepareWrite();
HXLINE( 176)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn());
HXLINE( 177)		this->o->push(type);
HXLINE( 178)		this->ii->push(colors);
HXLINE( 179)		this->ff->push(alphas);
HXLINE( 180)		this->ii->push(ratios);
HXLINE( 181)		this->o->push(matrix);
HXLINE( 182)		this->o->push(spreadMethod);
HXLINE( 183)		this->o->push(interpolationMethod);
HXLINE( 184)		this->f->push(focalPointRatio);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,beginGradientFill,(void))

void DrawCommandBuffer_obj::beginShaderFill( ::openfl::display::_internal::ShaderBuffer shaderBuffer){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_188_beginShaderFill)
HXLINE( 189)		this->prepareWrite();
HXLINE( 191)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn());
HXLINE( 192)		this->o->push(shaderBuffer);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,beginShaderFill,(void))

void DrawCommandBuffer_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_196_clear)
HXLINE( 197)		this->types = ::openfl::display::_internal::DrawCommandBuffer_obj::empty->types;
HXLINE( 199)		this->b = ::openfl::display::_internal::DrawCommandBuffer_obj::empty->b;
HXLINE( 200)		this->i = ::openfl::display::_internal::DrawCommandBuffer_obj::empty->i;
HXLINE( 201)		this->f = ::openfl::display::_internal::DrawCommandBuffer_obj::empty->f;
HXLINE( 202)		this->o = ::openfl::display::_internal::DrawCommandBuffer_obj::empty->o;
HXLINE( 203)		this->ff = ::openfl::display::_internal::DrawCommandBuffer_obj::empty->ff;
HXLINE( 204)		this->ii = ::openfl::display::_internal::DrawCommandBuffer_obj::empty->ii;
HXLINE( 206)		this->copyOnWrite = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,clear,(void))

 ::openfl::display::_internal::DrawCommandBuffer DrawCommandBuffer_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_fae278bbae08f83e_210_copy)
HXLINE( 211)		 ::openfl::display::_internal::DrawCommandBuffer copy =  ::openfl::display::_internal::DrawCommandBuffer_obj::__alloc( HX_CTX );
HXLINE( 212)		copy->append(::hx::ObjectPtr<OBJ_>(this));
HXLINE( 213)		return copy;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,copy,return )

void DrawCommandBuffer_obj::cubicCurveTo(Float controlX1,Float controlY1,Float controlX2,Float controlY2,Float anchorX,Float anchorY){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_217_cubicCurveTo)
HXLINE( 218)		this->prepareWrite();
HXLINE( 220)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::CUBIC_CURVE_TO_dyn());
HXLINE( 221)		this->f->push(controlX1);
HXLINE( 222)		this->f->push(controlY1);
HXLINE( 223)		this->f->push(controlX2);
HXLINE( 224)		this->f->push(controlY2);
HXLINE( 225)		this->f->push(anchorX);
HXLINE( 226)		this->f->push(anchorY);
            	}


HX_DEFINE_DYNAMIC_FUNC6(DrawCommandBuffer_obj,cubicCurveTo,(void))

void DrawCommandBuffer_obj::curveTo(Float controlX,Float controlY,Float anchorX,Float anchorY){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_230_curveTo)
HXLINE( 231)		this->prepareWrite();
HXLINE( 233)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::CURVE_TO_dyn());
HXLINE( 234)		this->f->push(controlX);
HXLINE( 235)		this->f->push(controlY);
HXLINE( 236)		this->f->push(anchorX);
HXLINE( 237)		this->f->push(anchorY);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,curveTo,(void))

void DrawCommandBuffer_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_241_destroy)
HXLINE( 242)		this->clear();
HXLINE( 244)		this->types = null();
HXLINE( 246)		this->b = null();
HXLINE( 247)		this->i = null();
HXLINE( 248)		this->f = null();
HXLINE( 249)		this->o = null();
HXLINE( 250)		this->ff = null();
HXLINE( 251)		this->ii = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,destroy,(void))

void DrawCommandBuffer_obj::drawCircle(Float x,Float y,Float radius){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_255_drawCircle)
HXLINE( 256)		this->prepareWrite();
HXLINE( 258)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::DRAW_CIRCLE_dyn());
HXLINE( 259)		this->f->push(x);
HXLINE( 260)		this->f->push(y);
HXLINE( 261)		this->f->push(radius);
            	}


HX_DEFINE_DYNAMIC_FUNC3(DrawCommandBuffer_obj,drawCircle,(void))

void DrawCommandBuffer_obj::drawEllipse(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_265_drawEllipse)
HXLINE( 266)		this->prepareWrite();
HXLINE( 268)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::DRAW_ELLIPSE_dyn());
HXLINE( 269)		this->f->push(x);
HXLINE( 270)		this->f->push(y);
HXLINE( 271)		this->f->push(width);
HXLINE( 272)		this->f->push(height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawEllipse,(void))

void DrawCommandBuffer_obj::drawQuads( ::openfl::_Vector::FloatVector rects, ::openfl::_Vector::IntVector indices, ::openfl::_Vector::FloatVector transforms){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_276_drawQuads)
HXLINE( 277)		this->prepareWrite();
HXLINE( 279)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::DRAW_QUADS_dyn());
HXLINE( 280)		this->o->push(rects);
HXLINE( 281)		this->o->push(indices);
HXLINE( 282)		this->o->push(transforms);
            	}


HX_DEFINE_DYNAMIC_FUNC3(DrawCommandBuffer_obj,drawQuads,(void))

void DrawCommandBuffer_obj::drawRect(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_286_drawRect)
HXLINE( 287)		this->prepareWrite();
HXLINE( 289)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::DRAW_RECT_dyn());
HXLINE( 290)		this->f->push(x);
HXLINE( 291)		this->f->push(y);
HXLINE( 292)		this->f->push(width);
HXLINE( 293)		this->f->push(height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawRect,(void))

void DrawCommandBuffer_obj::drawRoundRect(Float x,Float y,Float width,Float height,Float ellipseWidth, ::Dynamic ellipseHeight){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_297_drawRoundRect)
HXLINE( 298)		this->prepareWrite();
HXLINE( 300)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::DRAW_ROUND_RECT_dyn());
HXLINE( 301)		this->f->push(x);
HXLINE( 302)		this->f->push(y);
HXLINE( 303)		this->f->push(width);
HXLINE( 304)		this->f->push(height);
HXLINE( 305)		this->f->push(ellipseWidth);
HXLINE( 306)		this->o->push(ellipseHeight);
            	}


HX_DEFINE_DYNAMIC_FUNC6(DrawCommandBuffer_obj,drawRoundRect,(void))

void DrawCommandBuffer_obj::drawTriangles( ::openfl::_Vector::FloatVector vertices, ::openfl::_Vector::IntVector indices, ::openfl::_Vector::FloatVector uvtData, ::Dynamic culling){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_310_drawTriangles)
HXLINE( 311)		this->prepareWrite();
HXLINE( 313)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::DRAW_TRIANGLES_dyn());
HXLINE( 314)		this->o->push(vertices);
HXLINE( 315)		this->o->push(indices);
HXLINE( 316)		this->o->push(uvtData);
HXLINE( 317)		this->o->push(culling);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,drawTriangles,(void))

void DrawCommandBuffer_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_321_endFill)
HXLINE( 322)		this->prepareWrite();
HXLINE( 324)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::END_FILL_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,endFill,(void))

void DrawCommandBuffer_obj::lineBitmapStyle( ::openfl::display::BitmapData bitmap, ::openfl::geom::Matrix matrix,bool repeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_328_lineBitmapStyle)
HXLINE( 329)		this->prepareWrite();
HXLINE( 331)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn());
HXLINE( 332)		this->o->push(bitmap);
HXLINE( 333)		this->o->push(matrix);
HXLINE( 334)		this->b->push(repeat);
HXLINE( 335)		this->b->push(smooth);
            	}


HX_DEFINE_DYNAMIC_FUNC4(DrawCommandBuffer_obj,lineBitmapStyle,(void))

void DrawCommandBuffer_obj::lineGradientStyle( ::Dynamic type,::Array< int > colors,::Array< Float > alphas,::Array< int > ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_340_lineGradientStyle)
HXLINE( 341)		this->prepareWrite();
HXLINE( 343)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn());
HXLINE( 344)		this->o->push(type);
HXLINE( 345)		this->ii->push(colors);
HXLINE( 346)		this->ff->push(alphas);
HXLINE( 347)		this->ii->push(ratios);
HXLINE( 348)		this->o->push(matrix);
HXLINE( 349)		this->o->push(spreadMethod);
HXLINE( 350)		this->o->push(interpolationMethod);
HXLINE( 351)		this->f->push(focalPointRatio);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,lineGradientStyle,(void))

void DrawCommandBuffer_obj::lineStyle( ::Dynamic thickness,int color,Float alpha,bool pixelHinting, ::Dynamic scaleMode, ::Dynamic caps, ::Dynamic joints,Float miterLimit){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_356_lineStyle)
HXLINE( 357)		this->prepareWrite();
HXLINE( 359)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::LINE_STYLE_dyn());
HXLINE( 360)		this->o->push(thickness);
HXLINE( 361)		this->i->push(color);
HXLINE( 362)		this->f->push(alpha);
HXLINE( 363)		this->b->push(pixelHinting);
HXLINE( 364)		this->o->push(scaleMode);
HXLINE( 365)		this->o->push(caps);
HXLINE( 366)		this->o->push(joints);
HXLINE( 367)		this->f->push(miterLimit);
            	}


HX_DEFINE_DYNAMIC_FUNC8(DrawCommandBuffer_obj,lineStyle,(void))

void DrawCommandBuffer_obj::lineTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_371_lineTo)
HXLINE( 372)		this->prepareWrite();
HXLINE( 374)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::LINE_TO_dyn());
HXLINE( 375)		this->f->push(x);
HXLINE( 376)		this->f->push(y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,lineTo,(void))

void DrawCommandBuffer_obj::moveTo(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_380_moveTo)
HXLINE( 381)		this->prepareWrite();
HXLINE( 383)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::MOVE_TO_dyn());
HXLINE( 384)		this->f->push(x);
HXLINE( 385)		this->f->push(y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(DrawCommandBuffer_obj,moveTo,(void))

void DrawCommandBuffer_obj::prepareWrite(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_390_prepareWrite)
HXDLIN( 390)		if (this->copyOnWrite) {
HXLINE( 392)			this->types = this->types->copy();
HXLINE( 393)			this->b = this->b->copy();
HXLINE( 394)			this->i = this->i->copy();
HXLINE( 395)			this->f = this->f->copy();
HXLINE( 396)			this->o = this->o->copy();
HXLINE( 397)			this->ff = this->ff->copy();
HXLINE( 398)			this->ii = this->ii->copy();
HXLINE( 400)			this->copyOnWrite = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,prepareWrite,(void))

void DrawCommandBuffer_obj::overrideBlendMode( ::Dynamic blendMode){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_405_overrideBlendMode)
HXLINE( 406)		this->prepareWrite();
HXLINE( 408)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::OVERRIDE_BLEND_MODE_dyn());
HXLINE( 409)		this->o->push(blendMode);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,overrideBlendMode,(void))

void DrawCommandBuffer_obj::overrideMatrix( ::openfl::geom::Matrix matrix){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_413_overrideMatrix)
HXLINE( 414)		this->prepareWrite();
HXLINE( 416)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::OVERRIDE_MATRIX_dyn());
HXLINE( 417)		this->o->push(matrix);
            	}


HX_DEFINE_DYNAMIC_FUNC1(DrawCommandBuffer_obj,overrideMatrix,(void))

void DrawCommandBuffer_obj::windingEvenOdd(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_421_windingEvenOdd)
HXLINE( 422)		this->prepareWrite();
HXLINE( 424)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::WINDING_EVEN_ODD_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,windingEvenOdd,(void))

void DrawCommandBuffer_obj::windingNonZero(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_428_windingNonZero)
HXLINE( 429)		this->prepareWrite();
HXLINE( 431)		this->types->push(::openfl::display::_internal::DrawCommandType_obj::WINDING_NON_ZERO_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,windingNonZero,(void))

int DrawCommandBuffer_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_437_get_length)
HXDLIN( 437)		return this->types->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DrawCommandBuffer_obj,get_length,return )

 ::openfl::display::_internal::DrawCommandBuffer DrawCommandBuffer_obj::empty;


::hx::ObjectPtr< DrawCommandBuffer_obj > DrawCommandBuffer_obj::__new() {
	::hx::ObjectPtr< DrawCommandBuffer_obj > __this = new DrawCommandBuffer_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< DrawCommandBuffer_obj > DrawCommandBuffer_obj::__alloc(::hx::Ctx *_hx_ctx) {
	DrawCommandBuffer_obj *__this = (DrawCommandBuffer_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DrawCommandBuffer_obj), true, "openfl.display._internal.DrawCommandBuffer"));
	*(void **)__this = DrawCommandBuffer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DrawCommandBuffer_obj::DrawCommandBuffer_obj()
{
}

void DrawCommandBuffer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DrawCommandBuffer);
	HX_MARK_MEMBER_NAME(types,"types");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_MEMBER_NAME(copyOnWrite,"copyOnWrite");
	HX_MARK_MEMBER_NAME(f,"f");
	HX_MARK_MEMBER_NAME(ff,"ff");
	HX_MARK_MEMBER_NAME(i,"i");
	HX_MARK_MEMBER_NAME(ii,"ii");
	HX_MARK_MEMBER_NAME(o,"o");
	HX_MARK_END_CLASS();
}

void DrawCommandBuffer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(types,"types");
	HX_VISIT_MEMBER_NAME(b,"b");
	HX_VISIT_MEMBER_NAME(copyOnWrite,"copyOnWrite");
	HX_VISIT_MEMBER_NAME(f,"f");
	HX_VISIT_MEMBER_NAME(ff,"ff");
	HX_VISIT_MEMBER_NAME(i,"i");
	HX_VISIT_MEMBER_NAME(ii,"ii");
	HX_VISIT_MEMBER_NAME(o,"o");
}

::hx::Val DrawCommandBuffer_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { return ::hx::Val( b ); }
		if (HX_FIELD_EQ(inName,"f") ) { return ::hx::Val( f ); }
		if (HX_FIELD_EQ(inName,"i") ) { return ::hx::Val( i ); }
		if (HX_FIELD_EQ(inName,"o") ) { return ::hx::Val( o ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"ff") ) { return ::hx::Val( ff ); }
		if (HX_FIELD_EQ(inName,"ii") ) { return ::hx::Val( ii ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return ::hx::Val( copy_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"types") ) { return ::hx::Val( types ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_length() ); }
		if (HX_FIELD_EQ(inName,"append") ) { return ::hx::Val( append_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineTo") ) { return ::hx::Val( lineTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"moveTo") ) { return ::hx::Val( moveTo_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"curveTo") ) { return ::hx::Val( curveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return ::hx::Val( destroy_dyn() ); }
		if (HX_FIELD_EQ(inName,"endFill") ) { return ::hx::Val( endFill_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawRect") ) { return ::hx::Val( drawRect_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"beginFill") ) { return ::hx::Val( beginFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawQuads") ) { return ::hx::Val( drawQuads_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineStyle") ) { return ::hx::Val( lineStyle_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawCircle") ) { return ::hx::Val( drawCircle_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_length") ) { return ::hx::Val( get_length_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"copyOnWrite") ) { return ::hx::Val( copyOnWrite ); }
		if (HX_FIELD_EQ(inName,"drawEllipse") ) { return ::hx::Val( drawEllipse_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"cubicCurveTo") ) { return ::hx::Val( cubicCurveTo_dyn() ); }
		if (HX_FIELD_EQ(inName,"prepareWrite") ) { return ::hx::Val( prepareWrite_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { return ::hx::Val( drawRoundRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawTriangles") ) { return ::hx::Val( drawTriangles_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"overrideMatrix") ) { return ::hx::Val( overrideMatrix_dyn() ); }
		if (HX_FIELD_EQ(inName,"windingEvenOdd") ) { return ::hx::Val( windingEvenOdd_dyn() ); }
		if (HX_FIELD_EQ(inName,"windingNonZero") ) { return ::hx::Val( windingNonZero_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"beginBitmapFill") ) { return ::hx::Val( beginBitmapFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"beginShaderFill") ) { return ::hx::Val( beginShaderFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineBitmapStyle") ) { return ::hx::Val( lineBitmapStyle_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"beginGradientFill") ) { return ::hx::Val( beginGradientFill_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineGradientStyle") ) { return ::hx::Val( lineGradientStyle_dyn() ); }
		if (HX_FIELD_EQ(inName,"overrideBlendMode") ) { return ::hx::Val( overrideBlendMode_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool DrawCommandBuffer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { outValue = ( empty ); return true; }
	}
	return false;
}

::hx::Val DrawCommandBuffer_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"f") ) { f=inValue.Cast< ::Array< Float > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"i") ) { i=inValue.Cast< ::Array< int > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"o") ) { o=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"ff") ) { ff=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ii") ) { ii=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"types") ) { types=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"copyOnWrite") ) { copyOnWrite=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool DrawCommandBuffer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"empty") ) { empty=ioValue.Cast<  ::openfl::display::_internal::DrawCommandBuffer >(); return true; }
	}
	return false;
}

void DrawCommandBuffer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("length",e6,94,07,9f));
	outFields->push(HX_("types",79,70,cb,1a));
	outFields->push(HX_("b",62,00,00,00));
	outFields->push(HX_("copyOnWrite",0b,88,ab,bc));
	outFields->push(HX_("f",66,00,00,00));
	outFields->push(HX_("ff",40,59,00,00));
	outFields->push(HX_("i",69,00,00,00));
	outFields->push(HX_("ii",e0,5b,00,00));
	outFields->push(HX_("o",6f,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo DrawCommandBuffer_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(DrawCommandBuffer_obj,types),HX_("types",79,70,cb,1a)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(DrawCommandBuffer_obj,b),HX_("b",62,00,00,00)},
	{::hx::fsBool,(int)offsetof(DrawCommandBuffer_obj,copyOnWrite),HX_("copyOnWrite",0b,88,ab,bc)},
	{::hx::fsObject /* ::Array< Float > */ ,(int)offsetof(DrawCommandBuffer_obj,f),HX_("f",66,00,00,00)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(DrawCommandBuffer_obj,ff),HX_("ff",40,59,00,00)},
	{::hx::fsObject /* ::Array< int > */ ,(int)offsetof(DrawCommandBuffer_obj,i),HX_("i",69,00,00,00)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(DrawCommandBuffer_obj,ii),HX_("ii",e0,5b,00,00)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(DrawCommandBuffer_obj,o),HX_("o",6f,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo DrawCommandBuffer_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::display::_internal::DrawCommandBuffer */ ,(void *) &DrawCommandBuffer_obj::empty,HX_("empty",8d,3a,da,6f)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String DrawCommandBuffer_obj_sMemberFields[] = {
	HX_("types",79,70,cb,1a),
	HX_("b",62,00,00,00),
	HX_("copyOnWrite",0b,88,ab,bc),
	HX_("f",66,00,00,00),
	HX_("ff",40,59,00,00),
	HX_("i",69,00,00,00),
	HX_("ii",e0,5b,00,00),
	HX_("o",6f,00,00,00),
	HX_("append",da,e1,d3,8f),
	HX_("beginBitmapFill",9b,c9,07,6a),
	HX_("beginFill",4c,ad,95,8c),
	HX_("beginGradientFill",5c,3c,03,2e),
	HX_("beginShaderFill",d1,4b,43,67),
	HX_("clear",8d,71,5b,48),
	HX_("copy",b5,bb,c4,41),
	HX_("cubicCurveTo",e0,07,90,2e),
	HX_("curveTo",0a,60,88,ce),
	HX_("destroy",fa,2c,86,24),
	HX_("drawCircle",34,ed,d0,97),
	HX_("drawEllipse",3a,85,ce,54),
	HX_("drawQuads",28,ab,f2,25),
	HX_("drawRect",48,f7,10,60),
	HX_("drawRoundRect",ee,c3,aa,e2),
	HX_("drawTriangles",07,44,68,de),
	HX_("endFill",fe,87,e0,25),
	HX_("lineBitmapStyle",2e,3f,21,45),
	HX_("lineGradientStyle",8d,24,f2,c1),
	HX_("lineStyle",9d,a8,18,cb),
	HX_("lineTo",8f,46,a0,ec),
	HX_("moveTo",ec,d2,ac,cc),
	HX_("prepareWrite",d8,61,09,44),
	HX_("overrideBlendMode",68,f8,e9,f9),
	HX_("overrideMatrix",ad,8d,a9,b9),
	HX_("windingEvenOdd",bb,5c,0a,0b),
	HX_("windingNonZero",db,b4,3f,d6),
	HX_("get_length",af,04,8f,8f),
	::String(null()) };

static void DrawCommandBuffer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DrawCommandBuffer_obj::empty,"empty");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DrawCommandBuffer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DrawCommandBuffer_obj::empty,"empty");
};

#endif

::hx::Class DrawCommandBuffer_obj::__mClass;

static ::String DrawCommandBuffer_obj_sStaticFields[] = {
	HX_("empty",8d,3a,da,6f),
	::String(null())
};

void DrawCommandBuffer_obj::__register()
{
	DrawCommandBuffer_obj _hx_dummy;
	DrawCommandBuffer_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.display._internal.DrawCommandBuffer",8b,23,4c,fb);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DrawCommandBuffer_obj::__GetStatic;
	__mClass->mSetStaticField = &DrawCommandBuffer_obj::__SetStatic;
	__mClass->mMarkFunc = DrawCommandBuffer_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DrawCommandBuffer_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DrawCommandBuffer_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DrawCommandBuffer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DrawCommandBuffer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DrawCommandBuffer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DrawCommandBuffer_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DrawCommandBuffer_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_fae278bbae08f83e_22_boot)
HXDLIN(  22)		__mClass->__meta__ =  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("o",6f,00,00,00), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:Dynamic",ce,ea,47,3c)))))))
            			->setFixed(1,HX_("obj",f7,8f,54,00), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:FieldDocComment",70,56,1b,20))))));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_fae278bbae08f83e_24_boot)
HXDLIN(  24)		empty =  ::openfl::display::_internal::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
}

} // end namespace openfl
} // end namespace display
} // end namespace _internal
