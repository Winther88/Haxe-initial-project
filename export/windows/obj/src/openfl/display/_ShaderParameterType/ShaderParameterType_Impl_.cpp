// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display__ShaderParameterType_ShaderParameterType_Impl_
#include <openfl/display/_ShaderParameterType/ShaderParameterType_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_182_fromString,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","fromString",0x95cd8270,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.fromString","openfl/display/ShaderParameterType.hx",182,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_211_toString,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","toString",0xc4386601,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.toString","openfl/display/ShaderParameterType.hx",211,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_29_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",29,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_35_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",35,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_41_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",41,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_47_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",47,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_63_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",63,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_69_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",69,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_75_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",75,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_81_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",81,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_97_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",97,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_103_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",103,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_109_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",109,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_115_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",115,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_122_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",122,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_129_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",129,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_136_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",136,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_143_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",143,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_150_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",150,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_157_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",157,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_164_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",164,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_171_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",171,0xaf3fed4c)
HX_LOCAL_STACK_FRAME(_hx_pos_53db16673965a668_178_boot,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_","boot",0x62908b07,"openfl.display._ShaderParameterType.ShaderParameterType_Impl_.boot","openfl/display/ShaderParameterType.hx",178,0xaf3fed4c)
namespace openfl{
namespace display{
namespace _ShaderParameterType{

void ShaderParameterType_Impl__obj::__construct() { }

Dynamic ShaderParameterType_Impl__obj::__CreateEmpty() { return new ShaderParameterType_Impl__obj; }

void *ShaderParameterType_Impl__obj::_hx_vtable = 0;

Dynamic ShaderParameterType_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ShaderParameterType_Impl__obj > _hx_result = new ShaderParameterType_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ShaderParameterType_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6628ebb9;
}

 ::Dynamic ShaderParameterType_Impl__obj::BOOL;

 ::Dynamic ShaderParameterType_Impl__obj::BOOL2;

 ::Dynamic ShaderParameterType_Impl__obj::BOOL3;

 ::Dynamic ShaderParameterType_Impl__obj::BOOL4;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT2;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT3;

 ::Dynamic ShaderParameterType_Impl__obj::FLOAT4;

 ::Dynamic ShaderParameterType_Impl__obj::INT;

 ::Dynamic ShaderParameterType_Impl__obj::INT2;

 ::Dynamic ShaderParameterType_Impl__obj::INT3;

 ::Dynamic ShaderParameterType_Impl__obj::INT4;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX2X2;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX2X3;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX2X4;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX3X2;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX3X3;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX3X4;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX4X2;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX4X3;

 ::Dynamic ShaderParameterType_Impl__obj::MATRIX4X4;

 ::Dynamic ShaderParameterType_Impl__obj::fromString(::String value){
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_182_fromString)
HXDLIN( 182)		::String _hx_switch_0 = value;
            		if (  (_hx_switch_0==HX_("bool",2a,84,1b,41)) ){
HXLINE( 184)			return 0;
HXDLIN( 184)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bool2",c8,20,f8,b6)) ){
HXLINE( 185)			return 1;
HXDLIN( 185)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bool3",c9,20,f8,b6)) ){
HXLINE( 186)			return 1;
HXDLIN( 186)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bool4",ca,20,f8,b6)) ){
HXLINE( 187)			return 1;
HXDLIN( 187)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float",9c,c5,96,02)) ){
HXLINE( 188)			return 4;
HXDLIN( 188)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float2",16,23,56,41)) ){
HXLINE( 189)			return 5;
HXDLIN( 189)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float3",17,23,56,41)) ){
HXLINE( 190)			return 6;
HXDLIN( 190)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("float4",18,23,56,41)) ){
HXLINE( 191)			return 7;
HXDLIN( 191)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int",ef,0c,50,00)) ){
HXLINE( 192)			return 8;
HXDLIN( 192)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int2",63,44,bb,45)) ){
HXLINE( 193)			return 9;
HXDLIN( 193)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int3",64,44,bb,45)) ){
HXLINE( 194)			return 10;
HXDLIN( 194)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("int4",65,44,bb,45)) ){
HXLINE( 195)			return 11;
HXDLIN( 195)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix2x2",cb,c1,da,ad)) ){
HXLINE( 196)			return 12;
HXDLIN( 196)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix2x3",cc,c1,da,ad)) ){
HXLINE( 197)			return 13;
HXDLIN( 197)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix2x4",cd,c1,da,ad)) ){
HXLINE( 198)			return 14;
HXDLIN( 198)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix3x2",0c,84,db,ad)) ){
HXLINE( 199)			return 15;
HXDLIN( 199)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix3x3",0d,84,db,ad)) ){
HXLINE( 200)			return 16;
HXDLIN( 200)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix3x4",0e,84,db,ad)) ){
HXLINE( 201)			return 17;
HXDLIN( 201)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix4x2",4d,46,dc,ad)) ){
HXLINE( 202)			return 18;
HXDLIN( 202)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix4x3",4e,46,dc,ad)) ){
HXLINE( 203)			return 19;
HXDLIN( 203)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("matrix4x4",4f,46,dc,ad)) ){
HXLINE( 204)			return 20;
HXDLIN( 204)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE( 205)			return null();
            		}
            		_hx_goto_0:;
HXLINE( 182)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShaderParameterType_Impl__obj,fromString,return )

::String ShaderParameterType_Impl__obj::toString( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_211_toString)
HXDLIN( 211)		 ::Dynamic _hx_switch_0 = this1;
            		if (  (_hx_switch_0==0) ){
HXLINE( 213)			return HX_("bool",2a,84,1b,41);
HXDLIN( 213)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==1) ){
HXLINE( 214)			return HX_("bool2",c8,20,f8,b6);
HXDLIN( 214)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==2) ){
HXLINE( 215)			return HX_("bool3",c9,20,f8,b6);
HXDLIN( 215)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==3) ){
HXLINE( 216)			return HX_("bool4",ca,20,f8,b6);
HXDLIN( 216)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==4) ){
HXLINE( 217)			return HX_("float",9c,c5,96,02);
HXDLIN( 217)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==5) ){
HXLINE( 218)			return HX_("float2",16,23,56,41);
HXDLIN( 218)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==6) ){
HXLINE( 219)			return HX_("float3",17,23,56,41);
HXDLIN( 219)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==7) ){
HXLINE( 220)			return HX_("float4",18,23,56,41);
HXDLIN( 220)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==8) ){
HXLINE( 221)			return HX_("int",ef,0c,50,00);
HXDLIN( 221)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==9) ){
HXLINE( 222)			return HX_("int2",63,44,bb,45);
HXDLIN( 222)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==10) ){
HXLINE( 223)			return HX_("int3",64,44,bb,45);
HXDLIN( 223)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==11) ){
HXLINE( 224)			return HX_("int4",65,44,bb,45);
HXDLIN( 224)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==12) ){
HXLINE( 225)			return HX_("matrix2x2",cb,c1,da,ad);
HXDLIN( 225)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==13) ){
HXLINE( 226)			return HX_("matrix2x3",cc,c1,da,ad);
HXDLIN( 226)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==14) ){
HXLINE( 227)			return HX_("matrix2x4",cd,c1,da,ad);
HXDLIN( 227)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==15) ){
HXLINE( 228)			return HX_("matrix3x2",0c,84,db,ad);
HXDLIN( 228)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==16) ){
HXLINE( 229)			return HX_("matrix3x3",0d,84,db,ad);
HXDLIN( 229)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==17) ){
HXLINE( 230)			return HX_("matrix3x4",0e,84,db,ad);
HXDLIN( 230)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==18) ){
HXLINE( 231)			return HX_("matrix4x2",4d,46,dc,ad);
HXDLIN( 231)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==19) ){
HXLINE( 232)			return HX_("matrix4x3",4e,46,dc,ad);
HXDLIN( 232)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==20) ){
HXLINE( 233)			return HX_("matrix4x4",4f,46,dc,ad);
HXDLIN( 233)			goto _hx_goto_2;
            		}
            		/* default */{
HXLINE( 234)			return null();
            		}
            		_hx_goto_2:;
HXLINE( 211)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ShaderParameterType_Impl__obj,toString,return )


ShaderParameterType_Impl__obj::ShaderParameterType_Impl__obj()
{
}

bool ShaderParameterType_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ShaderParameterType_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo ShaderParameterType_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::BOOL,HX_("BOOL",2a,4c,dc,2b)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::BOOL2,HX_("BOOL2",c8,58,e6,34)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::BOOL3,HX_("BOOL3",c9,58,e6,34)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::BOOL4,HX_("BOOL4",ca,58,e6,34)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::FLOAT,HX_("FLOAT",7c,fd,84,80)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::FLOAT2,HX_("FLOAT2",36,cf,d8,f3)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::FLOAT3,HX_("FLOAT3",37,cf,d8,f3)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::FLOAT4,HX_("FLOAT4",38,cf,d8,f3)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::INT,HX_("INT",cf,a8,37,00)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::INT2,HX_("INT2",83,0c,7c,30)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::INT3,HX_("INT3",84,0c,7c,30)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::INT4,HX_("INT4",85,0c,7c,30)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX2X2,HX_("MATRIX2X2",eb,79,4b,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX2X3,HX_("MATRIX2X3",ec,79,4b,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX2X4,HX_("MATRIX2X4",ed,79,4b,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX3X2,HX_("MATRIX3X2",2c,3c,4c,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX3X3,HX_("MATRIX3X3",2d,3c,4c,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX3X4,HX_("MATRIX3X4",2e,3c,4c,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX4X2,HX_("MATRIX4X2",6d,fe,4c,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX4X3,HX_("MATRIX4X3",6e,fe,4c,a9)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &ShaderParameterType_Impl__obj::MATRIX4X4,HX_("MATRIX4X4",6f,fe,4c,a9)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void ShaderParameterType_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL,"BOOL");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL2,"BOOL2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL3,"BOOL3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL4,"BOOL4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT2,"FLOAT2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT3,"FLOAT3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT4,"FLOAT4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT,"INT");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT2,"INT2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT3,"INT3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::INT4,"INT4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X2,"MATRIX2X2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X3,"MATRIX2X3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X4,"MATRIX2X4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X2,"MATRIX3X2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X3,"MATRIX3X3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X4,"MATRIX3X4");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X2,"MATRIX4X2");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X3,"MATRIX4X3");
	HX_MARK_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X4,"MATRIX4X4");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ShaderParameterType_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL,"BOOL");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL2,"BOOL2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL3,"BOOL3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::BOOL4,"BOOL4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT2,"FLOAT2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT3,"FLOAT3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::FLOAT4,"FLOAT4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT,"INT");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT2,"INT2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT3,"INT3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::INT4,"INT4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X2,"MATRIX2X2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X3,"MATRIX2X3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX2X4,"MATRIX2X4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X2,"MATRIX3X2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X3,"MATRIX3X3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX3X4,"MATRIX3X4");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X2,"MATRIX4X2");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X3,"MATRIX4X3");
	HX_VISIT_MEMBER_NAME(ShaderParameterType_Impl__obj::MATRIX4X4,"MATRIX4X4");
};

#endif

::hx::Class ShaderParameterType_Impl__obj::__mClass;

static ::String ShaderParameterType_Impl__obj_sStaticFields[] = {
	HX_("BOOL",2a,4c,dc,2b),
	HX_("BOOL2",c8,58,e6,34),
	HX_("BOOL3",c9,58,e6,34),
	HX_("BOOL4",ca,58,e6,34),
	HX_("FLOAT",7c,fd,84,80),
	HX_("FLOAT2",36,cf,d8,f3),
	HX_("FLOAT3",37,cf,d8,f3),
	HX_("FLOAT4",38,cf,d8,f3),
	HX_("INT",cf,a8,37,00),
	HX_("INT2",83,0c,7c,30),
	HX_("INT3",84,0c,7c,30),
	HX_("INT4",85,0c,7c,30),
	HX_("MATRIX2X2",eb,79,4b,a9),
	HX_("MATRIX2X3",ec,79,4b,a9),
	HX_("MATRIX2X4",ed,79,4b,a9),
	HX_("MATRIX3X2",2c,3c,4c,a9),
	HX_("MATRIX3X3",2d,3c,4c,a9),
	HX_("MATRIX3X4",2e,3c,4c,a9),
	HX_("MATRIX4X2",6d,fe,4c,a9),
	HX_("MATRIX4X3",6e,fe,4c,a9),
	HX_("MATRIX4X4",6f,fe,4c,a9),
	HX_("fromString",db,2d,74,54),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void ShaderParameterType_Impl__obj::__register()
{
	ShaderParameterType_Impl__obj _hx_dummy;
	ShaderParameterType_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.display._ShaderParameterType.ShaderParameterType_Impl_",b9,c9,c6,80);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ShaderParameterType_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ShaderParameterType_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ShaderParameterType_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ShaderParameterType_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ShaderParameterType_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ShaderParameterType_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ShaderParameterType_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ShaderParameterType_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_29_boot)
HXDLIN(  29)		BOOL = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_35_boot)
HXDLIN(  35)		BOOL2 = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_41_boot)
HXDLIN(  41)		BOOL3 = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_47_boot)
HXDLIN(  47)		BOOL4 = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_63_boot)
HXDLIN(  63)		FLOAT = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_69_boot)
HXDLIN(  69)		FLOAT2 = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_75_boot)
HXDLIN(  75)		FLOAT3 = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_81_boot)
HXDLIN(  81)		FLOAT4 = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_97_boot)
HXDLIN(  97)		INT = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_103_boot)
HXDLIN( 103)		INT2 = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_109_boot)
HXDLIN( 109)		INT3 = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_115_boot)
HXDLIN( 115)		INT4 = 11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_122_boot)
HXDLIN( 122)		MATRIX2X2 = 12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_129_boot)
HXDLIN( 129)		MATRIX2X3 = 13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_136_boot)
HXDLIN( 136)		MATRIX2X4 = 14;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_143_boot)
HXDLIN( 143)		MATRIX3X2 = 15;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_150_boot)
HXDLIN( 150)		MATRIX3X3 = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_157_boot)
HXDLIN( 157)		MATRIX3X4 = 17;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_164_boot)
HXDLIN( 164)		MATRIX4X2 = 18;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_171_boot)
HXDLIN( 171)		MATRIX4X3 = 19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_53db16673965a668_178_boot)
HXDLIN( 178)		MATRIX4X4 = 20;
            	}
}

} // end namespace openfl
} // end namespace display
} // end namespace _ShaderParameterType
